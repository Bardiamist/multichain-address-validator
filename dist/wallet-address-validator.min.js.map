{
  "version": 3,
  "sources": ["../node_modules/base64-js/index.js", "../node_modules/ieee754/index.js", "../node_modules/buffer/index.js", "../src/crypto/blake256.js", "../src/crypto/sha3.js", "../src/crypto/blake2b.js", "../src/crypto/bech32.js", "../src/crypto/segwit_addr.js", "../node_modules/cbor-js/cbor.js", "../src/crypto/biginteger.js", "../src/crypto/cnBase58.js", "../node_modules/base-x/src/index.js", "../node_modules/lodash.isequal/index.js", "../src/crypto/utils.ts", "../node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@noble/hashes/src/utils.ts", "../node_modules/@noble/hashes/src/_md.ts", "../node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@noble/hashes/src/_u64.ts", "../node_modules/@noble/hashes/src/sha512.ts", "../src/crypto/base32.ts", "../src/crypto/base58.ts", "../src/helpers.ts", "../src/validators/algorand_validator.ts", "../src/validators/bch_validator.ts", "../src/validators/bitcoin_validator.ts", "../src/validators/cardano_validator.ts", "../node_modules/crc/mjs/calculators/crc1.js", "../node_modules/crc/mjs/create_buffer.js", "../node_modules/crc/mjs/define_crc.js", "../node_modules/crc/mjs/crc1.js", "../node_modules/crc/mjs/calculators/crc8.js", "../node_modules/crc/mjs/crc8.js", "../node_modules/crc/mjs/calculators/crc81wire.js", "../node_modules/crc/mjs/crc81wire.js", "../node_modules/crc/mjs/calculators/crc8dvbs2.js", "../node_modules/crc/mjs/crc8dvbs2.js", "../node_modules/crc/mjs/calculators/crc16.js", "../node_modules/crc/mjs/crc16.js", "../node_modules/crc/mjs/calculators/crc16ccitt.js", "../node_modules/crc/mjs/crc16ccitt.js", "../node_modules/crc/mjs/calculators/crc16modbus.js", "../node_modules/crc/mjs/crc16modbus.js", "../node_modules/crc/mjs/calculators/crc16xmodem.js", "../node_modules/crc/mjs/crc16xmodem.js", "../node_modules/crc/mjs/calculators/crc16kermit.js", "../node_modules/crc/mjs/crc16kermit.js", "../node_modules/crc/mjs/calculators/crc24.js", "../node_modules/crc/mjs/crc24.js", "../node_modules/crc/mjs/calculators/crc32.js", "../node_modules/crc/mjs/crc32.js", "../node_modules/crc/mjs/calculators/crc32mpeg2.js", "../node_modules/crc/mjs/crc32mpeg2.js", "../node_modules/crc/mjs/calculators/crcjam.js", "../node_modules/crc/mjs/crcjam.js", "../node_modules/crc/mjs/index.js", "../src/validators/bip173_validator.ts", "../src/validators/eos_validator.ts", "../src/validators/ethereum_validator.ts", "../src/validators/monero_validator.ts", "../src/validators/nem_validator.ts", "../src/validators/nano_validator.ts", "../src/validators/polkadot_validator.ts", "../src/validators/ripple_validator.ts", "../src/validators/sia_validator.ts", "../src/validators/base58_validator.ts", "../src/validators/solana_validator.ts", "../src/validators/tezos_validator.ts", "../src/validators/tron_validator.ts", "../src/validators/xlm_validator.ts", "../src/chain-validators.ts", "../src/wallet_address_validator.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "/**\n * Credits to https://github.com/cryptocoinjs/blake-hash\n */\nBlake256.sigma = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n    [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n    [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n    [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n    [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n]\n\nBlake256.u256 = [\n    0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n    0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n    0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n    0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917\n]\n\nBlake256.padding = Buffer.from([\n    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n])\n\nBlake256.prototype._length_carry = function (arr) {\n    for (var j = 0; j < arr.length; ++j) {\n        if (arr[j] < 0x0100000000) break\n        arr[j] -= 0x0100000000\n        arr[j + 1] += 1\n    }\n}\n\nBlake256.prototype.update = function (data, encoding) {\n    data = Buffer.from(data, encoding);\n    var block = this._block\n    var offset = 0\n\n    while (this._blockOffset + data.length - offset >= block.length) {\n        for (var i = this._blockOffset; i < block.length;) block[i++] = data[offset++]\n\n        this._length[0] += block.length * 8\n        this._length_carry(this._length)\n\n        this._compress()\n        this._blockOffset = 0\n    }\n\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n    return this;\n}\n\nvar zo = Buffer.from([0x01])\nvar oo = Buffer.from([0x81])\n\nfunction rot (x, n) {\n    return ((x << (32 - n)) | (x >>> n)) >>> 0\n}\n\nfunction g (v, m, i, a, b, c, d, e) {\n    var sigma = Blake256.sigma\n    var u256 = Blake256.u256\n\n    v[a] = (v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 16)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 12)\n    v[a] = (v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b]) >>> 0\n    v[d] = rot(v[d] ^ v[a], 8)\n    v[c] = (v[c] + v[d]) >>> 0\n    v[b] = rot(v[b] ^ v[c], 7)\n}\n\nfunction Blake256 () {\n    this._h = [\n        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n    ]\n\n    this._s = [0, 0, 0, 0]\n\n    this._block = Buffer.allocUnsafe(64)\n    this._blockOffset = 0\n    this._length = [0, 0]\n\n    this._nullt = false\n\n    this._zo = zo\n    this._oo = oo\n}\n\nBlake256.prototype._compress = function () {\n    var u256 = Blake256.u256\n    var v = new Array(16)\n    var m = new Array(16)\n    var i\n\n    for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4)\n    for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0\n    for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0\n    for (i = 12; i < 16; ++i) v[i] = u256[i - 8]\n\n    if (!this._nullt) {\n        v[12] = (v[12] ^ this._length[0]) >>> 0\n        v[13] = (v[13] ^ this._length[0]) >>> 0\n        v[14] = (v[14] ^ this._length[1]) >>> 0\n        v[15] = (v[15] ^ this._length[1]) >>> 0\n    }\n\n    for (i = 0; i < 14; ++i) {\n        /* column step */\n        g(v, m, i, 0, 4, 8, 12, 0)\n        g(v, m, i, 1, 5, 9, 13, 2)\n        g(v, m, i, 2, 6, 10, 14, 4)\n        g(v, m, i, 3, 7, 11, 15, 6)\n        /* diagonal step */\n        g(v, m, i, 0, 5, 10, 15, 8)\n        g(v, m, i, 1, 6, 11, 12, 10)\n        g(v, m, i, 2, 7, 8, 13, 12)\n        g(v, m, i, 3, 4, 9, 14, 14)\n    }\n\n    for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0\n    for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0\n}\n\nBlake256.prototype._padding = function () {\n    var lo = this._length[0] + this._blockOffset * 8\n    var hi = this._length[1]\n    if (lo >= 0x0100000000) {\n        lo -= 0x0100000000\n        hi += 1\n    }\n\n    var msglen = Buffer.allocUnsafe(8)\n    msglen.writeUInt32BE(hi, 0)\n    msglen.writeUInt32BE(lo, 4)\n\n    if (this._blockOffset === 55) {\n        this._length[0] -= 8\n        this.update(this._oo)\n    } else {\n        if (this._blockOffset < 55) {\n            if (this._blockOffset === 0) this._nullt = true\n            this._length[0] -= (55 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 55 - this._blockOffset))\n        } else {\n            this._length[0] -= (64 - this._blockOffset) * 8\n            this.update(Blake256.padding.slice(0, 64 - this._blockOffset))\n            this._length[0] -= 55 * 8\n            this.update(Blake256.padding.slice(1, 1 + 55))\n            this._nullt = true\n        }\n\n        this.update(this._zo)\n        this._length[0] -= 8\n    }\n\n    this._length[0] -= 64\n    this.update(msglen)\n}\n\nBlake256.prototype.digest = function (encoding) {\n    this._padding()\n\n    var buffer = Buffer.allocUnsafe(32)\n    for (var i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer.toString(encoding);\n}\n\nmodule.exports = Blake256;\n", "/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n'use strict';\n\nvar ERROR = 'input is invalid type';\nvar WINDOW = typeof window === 'object';\nvar root = WINDOW ? window : {};\nif (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n}\nvar WEB_WORKER = !WINDOW && typeof self === 'object';\nvar NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\nif (NODE_JS) {\n    root = global;\n} else if (WEB_WORKER) {\n    root = self;\n}\nvar ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\nvar HEX_CHARS = '0123456789abcdef'.split('');\nvar SHAKE_PADDING = [31, 7936, 2031616, 520093696];\nvar CSHAKE_PADDING = [4, 1024, 262144, 67108864];\nvar KECCAK_PADDING = [1, 256, 65536, 16777216];\nvar PADDING = [6, 1536, 393216, 100663296];\nvar SHIFT = [0, 8, 16, 24];\nvar RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\nvar BITS = [224, 256, 384, 512];\nvar SHAKE_BITS = [128, 256];\nvar OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\nvar CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n};\n\nif (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n}\n\nif (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n}\n\nvar createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n};\n\nvar createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n};\n\nvar createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n};\n\nvar createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n};\n\nvar createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n};\n\nvar createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n        return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n        return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n};\n\nvar createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n};\n\nvar createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n        if (!n && !s) {\n            return methods['shake' + bits].create(outputBits);\n        } else {\n            return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n        }\n    };\n    method.update = function (message, outputBits, n, s) {\n        return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n};\n\nvar createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n        return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n};\n\nvar algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n];\n\nvar methods = {}, methodNames = [];\n\nfor (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n        if (algorithm.name !== 'sha3') {\n            var newMethodName = algorithm.name + bits[j];\n            methodNames.push(newMethodName);\n            methods[newMethodName] = methods[methodName];\n        }\n    }\n}\n\nfunction Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n    }\n}\n\nKeccak.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (message === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n            } else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n        blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n        if (this.reset) {\n            this.reset = false;\n            blocks[0] = this.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        } else {\n            for (i = this.start; index < length && i < byteCount; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                } else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else {\n                    code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        if (i >= byteCount) {\n            this.start = i - byteCount;\n            this.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            this.reset = true;\n        } else {\n            this.start = i;\n        }\n    }\n    return this;\n};\n\nKeccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n        bytes.unshift(o);\n        x = x >> 8;\n        o = x & 255;\n        ++n;\n    }\n    if (right) {\n        bytes.push(n);\n    } else {\n        bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n};\n\nKeccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n        if (type === 'object') {\n            if (str === null) {\n                throw ERROR;\n            } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n                str = new Uint8Array(str);\n            } else if (!Array.isArray(str)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n                    throw ERROR;\n                }\n            }\n        } else {\n            throw ERROR;\n        }\n        notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n        bytes = length;\n    } else {\n        for (var i = 0; i < str.length; ++i) {\n            var code = str.charCodeAt(i);\n            if (code < 0x80) {\n                bytes += 1;\n            } else if (code < 0x800) {\n                bytes += 2;\n            } else if (code < 0xd800 || code >= 0xe000) {\n                bytes += 3;\n            } else {\n                code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n                bytes += 4;\n            }\n        }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n};\n\nKeccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n        bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n};\n\nKeccak.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n    f(s);\n};\n\nKeccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            block = s[i];\n            hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n                HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n                HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n                HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n        }\n    }\n    if (extraBytes) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n        if (extraBytes > 1) {\n            hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n        }\n        if (extraBytes > 2) {\n            hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n        }\n    }\n    return hex;\n};\n\nKeccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n        buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n        buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            array[j] = s[i];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n};\n\nKeccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\nKeccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            offset = j << 2;\n            block = s[i];\n            array[offset] = block & 0xFF;\n            array[offset + 1] = (block >> 8) & 0xFF;\n            array[offset + 2] = (block >> 16) & 0xFF;\n            array[offset + 3] = (block >> 24) & 0xFF;\n        }\n        if (j % blockCount === 0) {\n            f(s);\n        }\n    }\n    if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        if (extraBytes > 1) {\n            array[offset + 1] = (block >> 8) & 0xFF;\n        }\n        if (extraBytes > 2) {\n            array[offset + 2] = (block >> 16) & 0xFF;\n        }\n    }\n    return array;\n};\n\nfunction Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n}\n\nKmac.prototype = new Keccak();\n\nKmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n};\n\nvar f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n};\n\nmodule.exports = methods;\n", "'use strict';\n\n/**\n * Credits to https://github.com/emilbayes/blake2b\n *\n * Copyright (c) 2017, Emil Bay github@tixz.dk\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  for (i = 0; i < 12; i++) {\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\n// reusable parameter_block\nvar parameter_block = new Uint8Array([\n  0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,      //  4: leaf length, sequential mode\n  0, 0, 0, 0,      //  8: node offset\n  0, 0, 0, 0,      // 12: node offset\n  0, 0, 0, 0,      // 16: node depth, inner length, rfu\n  0, 0, 0, 0,      // 20: rfu\n  0, 0, 0, 0,      // 24: rfu\n  0, 0, 0, 0,      // 28: rfu\n  0, 0, 0, 0,      // 32: salt\n  0, 0, 0, 0,      // 36: salt\n  0, 0, 0, 0,      // 40: salt\n  0, 0, 0, 0,      // 44: salt\n  0, 0, 0, 0,      // 48: personal\n  0, 0, 0, 0,      // 52: personal\n  0, 0, 0, 0,      // 56: personal\n  0, 0, 0, 0       // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction Blake2b (outlen, key, salt, personal) {\n  // zero out parameter_block before usage\n  parameter_block.fill(0)\n  // state, 'param block'\n\n  this.b = new Uint8Array(128)\n  this.h = new Uint32Array(16)\n  this.t = 0 // input count\n  this.c = 0 // pointer within buffer\n  this.outlen = outlen // output length in bytes\n\n  parameter_block[0] = outlen\n  if (key) parameter_block[1] = key.length\n  parameter_block[2] = 1 // fanout\n  parameter_block[3] = 1 // depth\n\n  if (salt) parameter_block.set(salt, 32)\n  if (personal) parameter_block.set(personal, 48)\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(this, key)\n    // at the end\n    this.c = 128\n  }\n}\n\nBlake2b.prototype.update = function (input) {\n  blake2bUpdate(this, input)\n  return this\n}\n\nBlake2b.prototype.digest = function (out) {\n  var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n  blake2bFinal(this, buf)\n  if (out === 'hex') return hexSlice(buf)\n  return buf\n}\n\nBlake2b.prototype.final = Blake2b.prototype.digest\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx, out) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\nfunction hexSlice (buf) {\n  var str = ''\n  for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nmodule.exports = Blake2b;\n", "// Copyright (c) 2017, 2021 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nvar GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nconst encodings = {\n    BECH32: \"bech32\",\n    BECH32M: \"bech32m\",\n};\n\nmodule.exports = {\n    decode: decode,\n    encode: encode,\n    encodings: encodings,\n    verifyChecksum: verifyChecksum\n};\n\nfunction getEncodingConst (enc) {\n    if (enc == encodings.BECH32) {\n        return 1;\n    } else if (enc == encodings.BECH32M) {\n        return 0x2bc830a3;\n    } else {\n        return null;\n    }\n}\n\nfunction polymod (values) {\n    var chk = 1;\n    for (var p = 0; p < values.length; ++p) {\n        var top = chk >> 25;\n        chk = (chk & 0x1ffffff) << 5 ^ values[p];\n        for (var i = 0; i < 5; ++i) {\n            if ((top >> i) & 1) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n}\n\nfunction hrpExpand (hrp) {\n    var ret = [];\n    var p;\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n}\n\nfunction verifyChecksum (hrp, data, enc) {\n    return polymod(hrpExpand(hrp).concat(data)) === getEncodingConst(enc);\n}\n\nfunction createChecksum (hrp, data, enc) {\n    var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    var mod = polymod(values) ^ getEncodingConst(enc);\n    var ret = [];\n    for (var p = 0; p < 6; ++p) {\n        ret.push((mod >> 5 * (5 - p)) & 31);\n    }\n    return ret;\n}\n\nfunction encode (hrp, data, enc) {\n    var combined = data.concat(createChecksum(hrp, data, enc));\n    var ret = hrp + '1';\n    for (var p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n}\n\nfunction decode (bechString, enc) {\n    var p;\n    var has_lower = false;\n    var has_upper = false;\n    for (p = 0; p < bechString.length; ++p) {\n        if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n            return null;\n        }\n        if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n            has_lower = true;\n        }\n        if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n            has_upper = true;\n        }\n    }\n    if (has_lower && has_upper) {\n        return null;\n    }\n    bechString = bechString.toLowerCase();\n    var pos = bechString.lastIndexOf('1');\n    if (pos < 1 || pos + 7 > bechString.length || bechString.length > 110) {\n        return null;\n    }\n    var hrp = bechString.substring(0, pos);\n    var data = [];\n    for (p = pos + 1; p < bechString.length; ++p) {\n        var d = CHARSET.indexOf(bechString.charAt(p));\n        if (d === -1) {\n            return null;\n        }\n        data.push(d);\n    }\n    if (!verifyChecksum(hrp, data, enc)) {\n        return null;\n    }\n    return {hrp: hrp, data: data.slice(0, data.length - 6)};\n}\n", "// Copyright (c) 2017, 2021 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar bech32 = require('./bech32');\n\nfunction convertbits (data, frombits, tobits, pad) {\n    var acc = 0;\n    var bits = 0;\n    var ret = [];\n    var maxv = (1 << tobits) - 1;\n    for (var p = 0; p < data.length; ++p) {\n        var value = data[p];\n        if (value < 0 || (value >> frombits) !== 0) {\n            return null;\n        }\n        acc = (acc << frombits) | value;\n        bits += frombits;\n        while (bits >= tobits) {\n            bits -= tobits;\n            ret.push((acc >> bits) & maxv);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            ret.push((acc << (tobits - bits)) & maxv);\n        }\n    } else if (bits >= frombits || ((acc << (tobits - bits)) & maxv)) {\n        return null;\n    }\n    return ret;\n}\n\nfunction decode (hrp, addr) {\n    var bech32m = false;\n    var dec = bech32.decode(addr, bech32.encodings.BECH32);\n    if (dec === null) {\n        dec = bech32.decode(addr, bech32.encodings.BECH32M);\n        bech32m = true;\n    }\n    if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n        return null;\n    }\n    var res = convertbits(dec.data.slice(1), 5, 8, false);\n    if (res === null || res.length < 2 || res.length > 40) {\n        return null;\n    }\n    if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n        return null;\n    }\n    if (dec.data[0] === 0 && bech32m) {\n        return null;\n    }\n    if (dec.data[0] !== 0 && !bech32m) {\n        return null;\n    }\n    return {version: dec.data[0], program: res};\n}\n\nfunction encode (hrp, version, program) {\n    var enc = bech32.encodings.BECH32;\n    if (version > 0) {\n        enc = bech32.encodings.BECH32M;\n    }\n    var ret = bech32.encode(hrp, [version].concat(convertbits(program, 8, 5, true)), enc);\n    if (decode(hrp, ret, enc) === null) {\n        return null;\n    }\n    return ret;\n}\n\n/////////////////////////////////////////////////////\n\nfunction isValidAddress(address, networkType, opts = {}) {\n\n    if(!opts.bech32Hrp || opts.bech32Hrp.length === 0) {\n        return false;\n    }\n\n    var correctBech32Hrps;\n    if (networkType === 'mainnet' || networkType === 'testnet') {\n        correctBech32Hrps = opts.bech32Hrp[networkType];\n    } else if(opts.bech32Hrp) {\n        correctBech32Hrps = opts.bech32Hrp.mainnet.concat(opts.bech32Hrp.testnet)\n    } else {\n        return false;\n    }\n\n    for(var chrp of correctBech32Hrps) {\n        var ret = decode(chrp, address);\n        if(ret) {\n            return encode(chrp, ret.version, ret.program) === address.toLowerCase();\n        }\n    }\n\n    return false;\n}\n\nmodule.exports = {\n    encode: encode,\n    decode: decode,\n    isValidAddress: isValidAddress,\n};\n", "/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n(function(global, undefined) { \"use strict\";\r\nvar POW_2_24 = Math.pow(2, -24),\r\n    POW_2_32 = Math.pow(2, 32),\r\n    POW_2_53 = Math.pow(2, 53);\r\n\r\nfunction encode(value) {\r\n  var data = new ArrayBuffer(256);\r\n  var dataView = new DataView(data);\r\n  var lastLength;\r\n  var offset = 0;\r\n\r\n  function ensureSpace(length) {\r\n    var newByteLength = data.byteLength;\r\n    var requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength *= 2;\r\n    if (newByteLength !== data.byteLength) {\r\n      var oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      var uint32count = (offset + 3) >> 2;\r\n      for (var i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function write() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    write(ensureSpace(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    write(ensureSpace(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    var dataView = ensureSpace(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    write();\r\n  }\r\n  function writeUint16(value) {\r\n    write(ensureSpace(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    write(ensureSpace(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    var low = value % POW_2_32;\r\n    var high = (value - low) / POW_2_32;\r\n    var dataView = ensureSpace(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    write();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n  \r\n  function encodeItem(value) {\r\n    var i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined)\r\n      return writeUint8(0xf7);\r\n  \r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        var utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          var charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        var length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          var keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            var key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  \r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n  \r\n  var ret = new ArrayBuffer(offset);\r\n  var retView = new DataView(ret);\r\n  for (var i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  var dataView = new DataView(data);\r\n  var offset = 0;\r\n  \r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined; };\r\n\r\n  function read(value, length) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return read(new Uint8Array(data, offset, length), length);\r\n  }\r\n  function readFloat16() {\r\n    var tempArrayBuffer = new ArrayBuffer(4);\r\n    var tempDataView = new DataView(tempArrayBuffer);\r\n    var value = readUint16();\r\n\r\n    var sign = value & 0x8000;\r\n    var exponent = value & 0x7c00;\r\n    var fraction = value & 0x03ff;\r\n    \r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return fraction * POW_2_24;\r\n    \r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return read(dataView.getFloat32(offset), 4);\r\n  }\r\n  function readFloat64() {\r\n    return read(dataView.getFloat64(offset), 8);\r\n  }\r\n  function readUint8() {\r\n    return read(dataView.getUint8(offset), 1);\r\n  }\r\n  function readUint16() {\r\n    return read(dataView.getUint16(offset), 2);\r\n  }\r\n  function readUint32() {\r\n    return read(dataView.getUint32(offset), 4);\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    var initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    var length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16data(utf16data, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      var value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    var initialByte = readUint8();\r\n    var majorType = initialByte >> 5;\r\n    var additionalInformation = initialByte & 0x1f;\r\n    var i;\r\n    var length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          var elements = [];\r\n          var fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          var fullArray = new Uint8Array(fullArrayLength);\r\n          var fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        var utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16data(utf16data, length);\r\n        } else\r\n          appendUtf16data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        var retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        var retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          var key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  var ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nvar obj = { encode: encode, decode: decode };\r\n\r\nif (typeof define === \"function\" && define.amd)\r\n  define(\"cbor/cbor\", obj);\r\nelse if (typeof module !== 'undefined' && module.exports)\r\n  module.exports = obj;\r\nelse if (!global.CBOR)\r\n  global.CBOR = obj;\r\n\r\n})(this);\r\n", "/*\n\tJavaScript BigInteger library version 0.9.1\n\thttp://silentmatt.com/biginteger/\n\tCopyright (c) 2009 Matthew Crumley <email@matthewcrumley.com>\n\tCopyright (c) 2010,2011 by John Tobey <John.Tobey@gmail.com>\n\tLicensed under the MIT license.\n\tSupport for arbitrary internal representation base was added by\n\tVitaly Magerya.\n*/\n\n/*\n\tFile: biginteger.js\n\tExports:\n\t\t<BigInteger>\n*/\n(function(exports) {\n    \"use strict\";\n    /*\n        Class: BigInteger\n        An arbitrarily-large integer.\n        <BigInteger> objects should be considered immutable. None of the \"built-in\"\n        methods modify *this* or their arguments. All properties should be\n        considered private.\n        All the methods of <BigInteger> instances can be called \"statically\". The\n        static versions are convenient if you don't already have a <BigInteger>\n        object.\n        As an example, these calls are equivalent.\n        > BigInteger(4).multiply(5); // returns BigInteger(20);\n        > BigInteger.multiply(4, 5); // returns BigInteger(20);\n        > var a = 42;\n        > var a = BigInteger.toJSValue(\"0b101010\"); // Not completely useless...\n    */\n    \n    var CONSTRUCT = {}; // Unique token to call \"private\" version of constructor\n    \n    /*\n        Constructor: BigInteger()\n        Convert a value to a <BigInteger>.\n        Although <BigInteger()> is the constructor for <BigInteger> objects, it is\n        best not to call it as a constructor. If *n* is a <BigInteger> object, it is\n        simply returned as-is. Otherwise, <BigInteger()> is equivalent to <parse>\n        without a radix argument.\n        > var n0 = BigInteger();      // Same as <BigInteger.ZERO>\n        > var n1 = BigInteger(\"123\"); // Create a new <BigInteger> with value 123\n        > var n2 = BigInteger(123);   // Create a new <BigInteger> with value 123\n        > var n3 = BigInteger(n2);    // Return n2, unchanged\n        The constructor form only takes an array and a sign. *n* must be an\n        array of numbers in little-endian order, where each digit is between 0\n        and BigInteger.base.  The second parameter sets the sign: -1 for\n        negative, +1 for positive, or 0 for zero. The array is *not copied and\n        may be modified*. If the array contains only zeros, the sign parameter\n        is ignored and is forced to zero.\n        > new BigInteger([5], -1): create a new BigInteger with value -5\n        Parameters:\n            n - Value to convert to a <BigInteger>.\n        Returns:\n            A <BigInteger> value.\n        See Also:\n            <parse>, <BigInteger>\n    */\n    function BigInteger(n, s, token) {\n        \n        if (token !== CONSTRUCT) {\n            if (n instanceof BigInteger) {\n                return n;\n            }\n            else if (typeof n === \"undefined\") {\n                return ZERO;\n            }\n            return BigInteger.parse(n);\n        }\n    \n        n = n || [];  // Provide the nullary constructor for subclasses.\n        while (n.length && !n[n.length - 1]) {\n            --n.length;\n        }\n        this._d = n;\n        this._s = n.length ? (s || 1) : 0;\n    }\n    \n    BigInteger._construct = function(n, s) {\n        return new BigInteger(n, s, CONSTRUCT);\n    };\n    \n    // Base-10 speedup hacks in parse, toString, exp10 and log functions\n    // require base to be a power of 10. 10^7 is the largest such power\n    // that won't cause a precision loss when digits are multiplied.\n    var BigInteger_base = 10000000;\n    var BigInteger_base_log10 = 7;\n    \n    BigInteger.base = BigInteger_base;\n    BigInteger.base_log10 = BigInteger_base_log10;\n    \n    var ZERO = new BigInteger([], 0, CONSTRUCT);\n    // Constant: ZERO\n    // <BigInteger> 0.\n    BigInteger.ZERO = ZERO;\n    \n    var ONE = new BigInteger([1], 1, CONSTRUCT);\n    // Constant: ONE\n    // <BigInteger> 1.\n    BigInteger.ONE = ONE;\n    \n    var M_ONE = new BigInteger(ONE._d, -1, CONSTRUCT);\n    // Constant: M_ONE\n    // <BigInteger> -1.\n    BigInteger.M_ONE = M_ONE;\n    \n    // Constant: _0\n    // Shortcut for <ZERO>.\n    BigInteger._0 = ZERO;\n    \n    // Constant: _1\n    // Shortcut for <ONE>.\n    BigInteger._1 = ONE;\n    \n    /*\n        Constant: small\n        Array of <BigIntegers> from 0 to 36.\n        These are used internally for parsing, but useful when you need a \"small\"\n        <BigInteger>.\n        See Also:\n            <ZERO>, <ONE>, <_0>, <_1>\n    */\n    BigInteger.small = [\n        ZERO,\n        ONE,\n        /* Assuming BigInteger_base > 36 */\n        new BigInteger( [2], 1, CONSTRUCT),\n        new BigInteger( [3], 1, CONSTRUCT),\n        new BigInteger( [4], 1, CONSTRUCT),\n        new BigInteger( [5], 1, CONSTRUCT),\n        new BigInteger( [6], 1, CONSTRUCT),\n        new BigInteger( [7], 1, CONSTRUCT),\n        new BigInteger( [8], 1, CONSTRUCT),\n        new BigInteger( [9], 1, CONSTRUCT),\n        new BigInteger([10], 1, CONSTRUCT),\n        new BigInteger([11], 1, CONSTRUCT),\n        new BigInteger([12], 1, CONSTRUCT),\n        new BigInteger([13], 1, CONSTRUCT),\n        new BigInteger([14], 1, CONSTRUCT),\n        new BigInteger([15], 1, CONSTRUCT),\n        new BigInteger([16], 1, CONSTRUCT),\n        new BigInteger([17], 1, CONSTRUCT),\n        new BigInteger([18], 1, CONSTRUCT),\n        new BigInteger([19], 1, CONSTRUCT),\n        new BigInteger([20], 1, CONSTRUCT),\n        new BigInteger([21], 1, CONSTRUCT),\n        new BigInteger([22], 1, CONSTRUCT),\n        new BigInteger([23], 1, CONSTRUCT),\n        new BigInteger([24], 1, CONSTRUCT),\n        new BigInteger([25], 1, CONSTRUCT),\n        new BigInteger([26], 1, CONSTRUCT),\n        new BigInteger([27], 1, CONSTRUCT),\n        new BigInteger([28], 1, CONSTRUCT),\n        new BigInteger([29], 1, CONSTRUCT),\n        new BigInteger([30], 1, CONSTRUCT),\n        new BigInteger([31], 1, CONSTRUCT),\n        new BigInteger([32], 1, CONSTRUCT),\n        new BigInteger([33], 1, CONSTRUCT),\n        new BigInteger([34], 1, CONSTRUCT),\n        new BigInteger([35], 1, CONSTRUCT),\n        new BigInteger([36], 1, CONSTRUCT)\n    ];\n    \n    // Used for parsing/radix conversion\n    BigInteger.digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    \n    /*\n        Method: toString\n        Convert a <BigInteger> to a string.\n        When *base* is greater than 10, letters are upper case.\n        Parameters:\n            base - Optional base to represent the number in (default is base 10).\n                   Must be between 2 and 36 inclusive, or an Error will be thrown.\n        Returns:\n            The string representation of the <BigInteger>.\n    */\n    BigInteger.prototype.toString = function(base) {\n        base = +base || 10;\n        if (base < 2 || base > 36) {\n            throw new Error(\"illegal radix \" + base + \".\");\n        }\n        if (this._s === 0) {\n            return \"0\";\n        }\n        if (base === 10) {\n            var str = this._s < 0 ? \"-\" : \"\";\n            str += this._d[this._d.length - 1].toString();\n            for (var i = this._d.length - 2; i >= 0; i--) {\n                var group = this._d[i].toString();\n                while (group.length < BigInteger_base_log10) group = '0' + group;\n                str += group;\n            }\n            return str;\n        }\n        else {\n            var numerals = BigInteger.digits;\n            base = BigInteger.small[base];\n            var sign = this._s;\n    \n            var n = this.abs();\n            var digits = [];\n            var digit;\n    \n            while (n._s !== 0) {\n                var divmod = n.divRem(base);\n                n = divmod[0];\n                digit = divmod[1];\n                // TODO: This could be changed to unshift instead of reversing at the end.\n                // Benchmark both to compare speeds.\n                digits.push(numerals[digit.valueOf()]);\n            }\n            return (sign < 0 ? \"-\" : \"\") + digits.reverse().join(\"\");\n        }\n    };\n    \n    // Verify strings for parsing\n    BigInteger.radixRegex = [\n        /^$/,\n        /^$/,\n        /^[01]*$/,\n        /^[012]*$/,\n        /^[0-3]*$/,\n        /^[0-4]*$/,\n        /^[0-5]*$/,\n        /^[0-6]*$/,\n        /^[0-7]*$/,\n        /^[0-8]*$/,\n        /^[0-9]*$/,\n        /^[0-9aA]*$/,\n        /^[0-9abAB]*$/,\n        /^[0-9abcABC]*$/,\n        /^[0-9a-dA-D]*$/,\n        /^[0-9a-eA-E]*$/,\n        /^[0-9a-fA-F]*$/,\n        /^[0-9a-gA-G]*$/,\n        /^[0-9a-hA-H]*$/,\n        /^[0-9a-iA-I]*$/,\n        /^[0-9a-jA-J]*$/,\n        /^[0-9a-kA-K]*$/,\n        /^[0-9a-lA-L]*$/,\n        /^[0-9a-mA-M]*$/,\n        /^[0-9a-nA-N]*$/,\n        /^[0-9a-oA-O]*$/,\n        /^[0-9a-pA-P]*$/,\n        /^[0-9a-qA-Q]*$/,\n        /^[0-9a-rA-R]*$/,\n        /^[0-9a-sA-S]*$/,\n        /^[0-9a-tA-T]*$/,\n        /^[0-9a-uA-U]*$/,\n        /^[0-9a-vA-V]*$/,\n        /^[0-9a-wA-W]*$/,\n        /^[0-9a-xA-X]*$/,\n        /^[0-9a-yA-Y]*$/,\n        /^[0-9a-zA-Z]*$/\n    ];\n    \n    /*\n        Function: parse\n        Parse a string into a <BigInteger>.\n        *base* is optional but, if provided, must be from 2 to 36 inclusive. If\n        *base* is not provided, it will be guessed based on the leading characters\n        of *s* as follows:\n        - \"0x\" or \"0X\": *base* = 16\n        - \"0c\" or \"0C\": *base* = 8\n        - \"0b\" or \"0B\": *base* = 2\n        - else: *base* = 10\n        If no base is provided, or *base* is 10, the number can be in exponential\n        form. For example, these are all valid:\n        > BigInteger.parse(\"1e9\");              // Same as \"1000000000\"\n        > BigInteger.parse(\"1.234*10^3\");       // Same as 1234\n        > BigInteger.parse(\"56789 * 10 ** -2\"); // Same as 567\n        If any characters fall outside the range defined by the radix, an exception\n        will be thrown.\n        Parameters:\n            s - The string to parse.\n            base - Optional radix (default is to guess based on *s*).\n        Returns:\n            a <BigInteger> instance.\n    */\n    BigInteger.parse = function(s, base) {\n        // Expands a number in exponential form to decimal form.\n        // expandExponential(\"-13.441*10^5\") === \"1344100\";\n        // expandExponential(\"1.12300e-1\") === \"0.112300\";\n        // expandExponential(1000000000000000000000000000000) === \"1000000000000000000000000000000\";\n        function expandExponential(str) {\n            str = str.replace(/\\s*[*xX]\\s*10\\s*(\\^|\\*\\*)\\s*/, \"e\");\n    \n            return str.replace(/^([+\\-])?(\\d+)\\.?(\\d*)[eE]([+\\-]?\\d+)$/, function(x, s, n, f, c) {\n                c = +c;\n                var l = c < 0;\n                var i = n.length + c;\n                x = (l ? n : f).length;\n                c = ((c = Math.abs(c)) >= x ? c - x + l : 0);\n                var z = (new Array(c + 1)).join(\"0\");\n                var r = n + f;\n                return (s || \"\") + (l ? r = z + r : r += z).substr(0, i += l ? z.length : 0) + (i < r.length ? \".\" + r.substr(i) : \"\");\n            });\n        }\n    \n        s = s.toString();\n        if (typeof base === \"undefined\" || +base === 10) {\n            s = expandExponential(s);\n        }\n    \n        var prefixRE;\n        if (typeof base === \"undefined\") {\n            prefixRE = '0[xcb]';\n        }\n        else if (base == 16) {\n            prefixRE = '0x';\n        }\n        else if (base == 8) {\n            prefixRE = '0c';\n        }\n        else if (base == 2) {\n            prefixRE = '0b';\n        }\n        else {\n            prefixRE = '';\n        }\n        var parts = new RegExp('^([+\\\\-]?)(' + prefixRE + ')?([0-9a-z]*)(?:\\\\.\\\\d*)?$', 'i').exec(s);\n        if (parts) {\n            var sign = parts[1] || \"+\";\n            var baseSection = parts[2] || \"\";\n            var digits = parts[3] || \"\";\n    \n            if (typeof base === \"undefined\") {\n                // Guess base\n                if (baseSection === \"0x\" || baseSection === \"0X\") { // Hex\n                    base = 16;\n                }\n                else if (baseSection === \"0c\" || baseSection === \"0C\") { // Octal\n                    base = 8;\n                }\n                else if (baseSection === \"0b\" || baseSection === \"0B\") { // Binary\n                    base = 2;\n                }\n                else {\n                    base = 10;\n                }\n            }\n            else if (base < 2 || base > 36) {\n                throw new Error(\"Illegal radix \" + base + \".\");\n            }\n    \n            base = +base;\n    \n            // Check for digits outside the range\n            if (!(BigInteger.radixRegex[base].test(digits))) {\n                throw new Error(\"Bad digit for radix \" + base);\n            }\n    \n            // Strip leading zeros, and convert to array\n            digits = digits.replace(/^0+/, \"\").split(\"\");\n            if (digits.length === 0) {\n                return ZERO;\n            }\n    \n            // Get the sign (we know it's not zero)\n            sign = (sign === \"-\") ? -1 : 1;\n    \n            // Optimize 10\n            if (base == 10) {\n                var d = [];\n                while (digits.length >= BigInteger_base_log10) {\n                    d.push(parseInt(digits.splice(digits.length-BigInteger.base_log10, BigInteger.base_log10).join(''), 10));\n                }\n                d.push(parseInt(digits.join(''), 10));\n                return new BigInteger(d, sign, CONSTRUCT);\n            }\n    \n            // Do the conversion\n            var d = ZERO;\n            base = BigInteger.small[base];\n            var small = BigInteger.small;\n            for (var i = 0; i < digits.length; i++) {\n                d = d.multiply(base).add(small[parseInt(digits[i], 36)]);\n            }\n            return new BigInteger(d._d, sign, CONSTRUCT);\n        }\n        else {\n            throw new Error(\"Invalid BigInteger format: \" + s);\n        }\n    };\n    \n    /*\n        Function: add\n        Add two <BigIntegers>.\n        Parameters:\n            n - The number to add to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            The numbers added together.\n        See Also:\n            <subtract>, <multiply>, <quotient>, <next>\n    */\n    BigInteger.prototype.add = function(n) {\n        if (this._s === 0) {\n            return BigInteger(n);\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return this;\n        }\n        if (this._s !== n._s) {\n            n = n.negate();\n            return this.subtract(n);\n        }\n    \n        var a = this._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var sum = new Array(Math.max(al, bl) + 1);\n        var size = Math.min(al, bl);\n        var carry = 0;\n        var digit;\n    \n        for (var i = 0; i < size; i++) {\n            digit = a[i] + b[i] + carry;\n            sum[i] = digit % BigInteger_base;\n            carry = (digit / BigInteger_base) | 0;\n        }\n        if (bl > al) {\n            a = b;\n            al = bl;\n        }\n        for (i = size; carry && i < al; i++) {\n            digit = a[i] + carry;\n            sum[i] = digit % BigInteger_base;\n            carry = (digit / BigInteger_base) | 0;\n        }\n        if (carry) {\n            sum[i] = carry;\n        }\n    \n        for ( ; i < al; i++) {\n            sum[i] = a[i];\n        }\n    \n        return new BigInteger(sum, this._s, CONSTRUCT);\n    };\n    \n    /*\n        Function: negate\n        Get the additive inverse of a <BigInteger>.\n        Returns:\n            A <BigInteger> with the same magnatude, but with the opposite sign.\n        See Also:\n            <abs>\n    */\n    BigInteger.prototype.negate = function() {\n        return new BigInteger(this._d, (-this._s) | 0, CONSTRUCT);\n    };\n    \n    /*\n        Function: abs\n        Get the absolute value of a <BigInteger>.\n        Returns:\n            A <BigInteger> with the same magnatude, but always positive (or zero).\n        See Also:\n            <negate>\n    */\n    BigInteger.prototype.abs = function() {\n        return (this._s < 0) ? this.negate() : this;\n    };\n    \n    /*\n        Function: subtract\n        Subtract two <BigIntegers>.\n        Parameters:\n            n - The number to subtract from *this*. Will be converted to a <BigInteger>.\n        Returns:\n            The *n* subtracted from *this*.\n        See Also:\n            <add>, <multiply>, <quotient>, <prev>\n    */\n    BigInteger.prototype.subtract = function(n) {\n        if (this._s === 0) {\n            return BigInteger(n).negate();\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return this;\n        }\n        if (this._s !== n._s) {\n            n = n.negate();\n            return this.add(n);\n        }\n    \n        var m = this;\n        // negative - negative => -|a| - -|b| => -|a| + |b| => |b| - |a|\n        if (this._s < 0) {\n            m = new BigInteger(n._d, 1, CONSTRUCT);\n            n = new BigInteger(this._d, 1, CONSTRUCT);\n        }\n    \n        // Both are positive => a - b\n        var sign = m.compareAbs(n);\n        if (sign === 0) {\n            return ZERO;\n        }\n        else if (sign < 0) {\n            // swap m and n\n            var t = n;\n            n = m;\n            m = t;\n        }\n    \n        // a > b\n        var a = m._d;\n        var b = n._d;\n        var al = a.length;\n        var bl = b.length;\n        var diff = new Array(al); // al >= bl since a > b\n        var borrow = 0;\n        var i;\n        var digit;\n    \n        for (i = 0; i < bl; i++) {\n            digit = a[i] - borrow - b[i];\n            if (digit < 0) {\n                digit += BigInteger_base;\n                borrow = 1;\n            }\n            else {\n                borrow = 0;\n            }\n            diff[i] = digit;\n        }\n        for (i = bl; i < al; i++) {\n            digit = a[i] - borrow;\n            if (digit < 0) {\n                digit += BigInteger_base;\n            }\n            else {\n                diff[i++] = digit;\n                break;\n            }\n            diff[i] = digit;\n        }\n        for ( ; i < al; i++) {\n            diff[i] = a[i];\n        }\n    \n        return new BigInteger(diff, sign, CONSTRUCT);\n    };\n    \n    (function() {\n        function addOne(n, sign) {\n            var a = n._d;\n            var sum = a.slice();\n            var carry = true;\n            var i = 0;\n    \n            while (true) {\n                var digit = (a[i] || 0) + 1;\n                sum[i] = digit % BigInteger_base;\n                if (digit <= BigInteger_base - 1) {\n                    break;\n                }\n                ++i;\n            }\n    \n            return new BigInteger(sum, sign, CONSTRUCT);\n        }\n    \n        function subtractOne(n, sign) {\n            var a = n._d;\n            var sum = a.slice();\n            var borrow = true;\n            var i = 0;\n    \n            while (true) {\n                var digit = (a[i] || 0) - 1;\n                if (digit < 0) {\n                    sum[i] = digit + BigInteger_base;\n                }\n                else {\n                    sum[i] = digit;\n                    break;\n                }\n                ++i;\n            }\n    \n            return new BigInteger(sum, sign, CONSTRUCT);\n        }\n    \n        /*\n            Function: next\n            Get the next <BigInteger> (add one).\n            Returns:\n                *this* + 1.\n            See Also:\n                <add>, <prev>\n        */\n        BigInteger.prototype.next = function() {\n            switch (this._s) {\n            case 0:\n                return ONE;\n            case -1:\n                return subtractOne(this, -1);\n            // case 1:\n            default:\n                return addOne(this, 1);\n            }\n        };\n    \n        /*\n            Function: prev\n            Get the previous <BigInteger> (subtract one).\n            Returns:\n                *this* - 1.\n            See Also:\n                <next>, <subtract>\n        */\n        BigInteger.prototype.prev = function() {\n            switch (this._s) {\n            case 0:\n                return M_ONE;\n            case -1:\n                return addOne(this, -1);\n            // case 1:\n            default:\n                return subtractOne(this, 1);\n            }\n        };\n    })();\n    \n    /*\n        Function: compareAbs\n        Compare the absolute value of two <BigIntegers>.\n        Calling <compareAbs> is faster than calling <abs> twice, then <compare>.\n        Parameters:\n            n - The number to compare to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            -1, 0, or +1 if *|this|* is less than, equal to, or greater than *|n|*.\n        See Also:\n            <compare>, <abs>\n    */\n    BigInteger.prototype.compareAbs = function(n) {\n        if (this === n) {\n            return 0;\n        }\n    \n        if (!(n instanceof BigInteger)) {\n            if (!isFinite(n)) {\n                return(isNaN(n) ? n : -1);\n            }\n            n = BigInteger(n);\n        }\n    \n        if (this._s === 0) {\n            return (n._s !== 0) ? -1 : 0;\n        }\n        if (n._s === 0) {\n            return 1;\n        }\n    \n        var l = this._d.length;\n        var nl = n._d.length;\n        if (l < nl) {\n            return -1;\n        }\n        else if (l > nl) {\n            return 1;\n        }\n    \n        var a = this._d;\n        var b = n._d;\n        for (var i = l-1; i >= 0; i--) {\n            if (a[i] !== b[i]) {\n                return a[i] < b[i] ? -1 : 1;\n            }\n        }\n    \n        return 0;\n    };\n    \n    /*\n        Function: compare\n        Compare two <BigIntegers>.\n        Parameters:\n            n - The number to compare to *this*. Will be converted to a <BigInteger>.\n        Returns:\n            -1, 0, or +1 if *this* is less than, equal to, or greater than *n*.\n        See Also:\n            <compareAbs>, <isPositive>, <isNegative>, <isUnit>\n    */\n    BigInteger.prototype.compare = function(n) {\n        if (this === n) {\n            return 0;\n        }\n    \n        n = BigInteger(n);\n    \n        if (this._s === 0) {\n            return -n._s;\n        }\n    \n        if (this._s === n._s) { // both positive or both negative\n            var cmp = this.compareAbs(n);\n            return cmp * this._s;\n        }\n        else {\n            return this._s;\n        }\n    };\n    \n    /*\n        Function: isUnit\n        Return true iff *this* is either 1 or -1.\n        Returns:\n            true if *this* compares equal to <BigInteger.ONE> or <BigInteger.M_ONE>.\n        See Also:\n            <isZero>, <isNegative>, <isPositive>, <compareAbs>, <compare>,\n            <BigInteger.ONE>, <BigInteger.M_ONE>\n    */\n    BigInteger.prototype.isUnit = function() {\n        return this === ONE ||\n            this === M_ONE ||\n            (this._d.length === 1 && this._d[0] === 1);\n    };\n    \n    /*\n        Function: multiply\n        Multiply two <BigIntegers>.\n        Parameters:\n            n - The number to multiply *this* by. Will be converted to a\n            <BigInteger>.\n        Returns:\n            The numbers multiplied together.\n        See Also:\n            <add>, <subtract>, <quotient>, <square>\n    */\n    BigInteger.prototype.multiply = function(n) {\n        // TODO: Consider adding Karatsuba multiplication for large numbers\n        if (this._s === 0) {\n            return ZERO;\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return ZERO;\n        }\n        if (this.isUnit()) {\n            if (this._s < 0) {\n                return n.negate();\n            }\n            return n;\n        }\n        if (n.isUnit()) {\n            if (n._s < 0) {\n                return this.negate();\n            }\n            return this;\n        }\n        if (this === n) {\n            return this.square();\n        }\n    \n        var r = (this._d.length >= n._d.length);\n        var a = (r ? this : n)._d; // a will be longer than b\n        var b = (r ? n : this)._d;\n        var al = a.length;\n        var bl = b.length;\n    \n        var pl = al + bl;\n        var partial = new Array(pl);\n        var i;\n        for (i = 0; i < pl; i++) {\n            partial[i] = 0;\n        }\n    \n        for (i = 0; i < bl; i++) {\n            var carry = 0;\n            var bi = b[i];\n            var jlimit = al + i;\n            var digit;\n            for (var j = i; j < jlimit; j++) {\n                digit = partial[j] + bi * a[j - i] + carry;\n                carry = (digit / BigInteger_base) | 0;\n                partial[j] = (digit % BigInteger_base) | 0;\n            }\n            if (carry) {\n                digit = partial[j] + carry;\n                carry = (digit / BigInteger_base) | 0;\n                partial[j] = digit % BigInteger_base;\n            }\n        }\n        return new BigInteger(partial, this._s * n._s, CONSTRUCT);\n    };\n    \n    // Multiply a BigInteger by a single-digit native number\n    // Assumes that this and n are >= 0\n    // This is not really intended to be used outside the library itself\n    BigInteger.prototype.multiplySingleDigit = function(n) {\n        if (n === 0 || this._s === 0) {\n            return ZERO;\n        }\n        if (n === 1) {\n            return this;\n        }\n    \n        var digit;\n        if (this._d.length === 1) {\n            digit = this._d[0] * n;\n            if (digit >= BigInteger_base) {\n                return new BigInteger([(digit % BigInteger_base)|0,\n                        (digit / BigInteger_base)|0], 1, CONSTRUCT);\n            }\n            return new BigInteger([digit], 1, CONSTRUCT);\n        }\n    \n        if (n === 2) {\n            return this.add(this);\n        }\n        if (this.isUnit()) {\n            return new BigInteger([n], 1, CONSTRUCT);\n        }\n    \n        var a = this._d;\n        var al = a.length;\n    \n        var pl = al + 1;\n        var partial = new Array(pl);\n        for (var i = 0; i < pl; i++) {\n            partial[i] = 0;\n        }\n    \n        var carry = 0;\n        for (var j = 0; j < al; j++) {\n            digit = n * a[j] + carry;\n            carry = (digit / BigInteger_base) | 0;\n            partial[j] = (digit % BigInteger_base) | 0;\n        }\n        if (carry) {\n            partial[j] = carry;\n        }\n    \n        return new BigInteger(partial, 1, CONSTRUCT);\n    };\n    \n    /*\n        Function: square\n        Multiply a <BigInteger> by itself.\n        This is slightly faster than regular multiplication, since it removes the\n        duplicated multiplcations.\n        Returns:\n            > this.multiply(this)\n        See Also:\n            <multiply>\n    */\n    BigInteger.prototype.square = function() {\n        // Normally, squaring a 10-digit number would take 100 multiplications.\n        // Of these 10 are unique diagonals, of the remaining 90 (100-10), 45 are repeated.\n        // This procedure saves (N*(N-1))/2 multiplications, (e.g., 45 of 100 multiplies).\n        // Based on code by Gary Darby, Intellitech Systems Inc., www.DelphiForFun.org\n    \n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (this.isUnit()) {\n            return ONE;\n        }\n    \n        var digits = this._d;\n        var length = digits.length;\n        var imult1 = new Array(length + length + 1);\n        var product, carry, k;\n        var i;\n    \n        // Calculate diagonal\n        for (i = 0; i < length; i++) {\n            k = i * 2;\n            product = digits[i] * digits[i];\n            carry = (product / BigInteger_base) | 0;\n            imult1[k] = product % BigInteger_base;\n            imult1[k + 1] = carry;\n        }\n    \n        // Calculate repeating part\n        for (i = 0; i < length; i++) {\n            carry = 0;\n            k = i * 2 + 1;\n            for (var j = i + 1; j < length; j++, k++) {\n                product = digits[j] * digits[i] * 2 + imult1[k] + carry;\n                carry = (product / BigInteger_base) | 0;\n                imult1[k] = product % BigInteger_base;\n            }\n            k = length + i;\n            var digit = carry + imult1[k];\n            carry = (digit / BigInteger_base) | 0;\n            imult1[k] = digit % BigInteger_base;\n            imult1[k + 1] += carry;\n        }\n    \n        return new BigInteger(imult1, 1, CONSTRUCT);\n    };\n    \n    /*\n        Function: quotient\n        Divide two <BigIntegers> and truncate towards zero.\n        <quotient> throws an exception if *n* is zero.\n        Parameters:\n            n - The number to divide *this* by. Will be converted to a <BigInteger>.\n        Returns:\n            The *this* / *n*, truncated to an integer.\n        See Also:\n            <add>, <subtract>, <multiply>, <divRem>, <remainder>\n    */\n    BigInteger.prototype.quotient = function(n) {\n        return this.divRem(n)[0];\n    };\n    \n    /*\n        Function: divide\n        Deprecated synonym for <quotient>.\n    */\n    BigInteger.prototype.divide = BigInteger.prototype.quotient;\n    \n    /*\n        Function: remainder\n        Calculate the remainder of two <BigIntegers>.\n        <remainder> throws an exception if *n* is zero.\n        Parameters:\n            n - The remainder after *this* is divided *this* by *n*. Will be\n                converted to a <BigInteger>.\n        Returns:\n            *this* % *n*.\n        See Also:\n            <divRem>, <quotient>\n    */\n    BigInteger.prototype.remainder = function(n) {\n        return this.divRem(n)[1];\n    };\n    \n    /*\n        Function: divRem\n        Calculate the integer quotient and remainder of two <BigIntegers>.\n        <divRem> throws an exception if *n* is zero.\n        Parameters:\n            n - The number to divide *this* by. Will be converted to a <BigInteger>.\n        Returns:\n            A two-element array containing the quotient and the remainder.\n            > a.divRem(b)\n            is exactly equivalent to\n            > [a.quotient(b), a.remainder(b)]\n            except it is faster, because they are calculated at the same time.\n        See Also:\n            <quotient>, <remainder>\n    */\n    BigInteger.prototype.divRem = function(n) {\n        n = BigInteger(n);\n        if (n._s === 0) {\n            throw new Error(\"Divide by zero\");\n        }\n        if (this._s === 0) {\n            return [ZERO, ZERO];\n        }\n        if (n._d.length === 1) {\n            return this.divRemSmall(n._s * n._d[0]);\n        }\n    \n        // Test for easy cases -- |n1| <= |n2|\n        switch (this.compareAbs(n)) {\n        case 0: // n1 == n2\n            return [this._s === n._s ? ONE : M_ONE, ZERO];\n        case -1: // |n1| < |n2|\n            return [ZERO, this];\n        }\n    \n        var sign = this._s * n._s;\n        var a = n.abs();\n        var b_digits = this._d;\n        var b_index = b_digits.length;\n        var digits = n._d.length;\n        var quot = [];\n        var guess;\n    \n        var part = new BigInteger([], 0, CONSTRUCT);\n    \n        while (b_index) {\n            part._d.unshift(b_digits[--b_index]);\n            part = new BigInteger(part._d, 1, CONSTRUCT);\n    \n            if (part.compareAbs(n) < 0) {\n                quot.push(0);\n                continue;\n            }\n            if (part._s === 0) {\n                guess = 0;\n            }\n            else {\n                var xlen = part._d.length, ylen = a._d.length;\n                var highx = part._d[xlen-1]*BigInteger_base + part._d[xlen-2];\n                var highy = a._d[ylen-1]*BigInteger_base + a._d[ylen-2];\n                if (part._d.length > a._d.length) {\n                    // The length of part._d can either match a._d length,\n                    // or exceed it by one.\n                    highx = (highx+1)*BigInteger_base;\n                }\n                guess = Math.ceil(highx/highy);\n            }\n            do {\n                var check = a.multiplySingleDigit(guess);\n                if (check.compareAbs(part) <= 0) {\n                    break;\n                }\n                guess--;\n            } while (guess);\n    \n            quot.push(guess);\n            if (!guess) {\n                continue;\n            }\n            var diff = part.subtract(check);\n            part._d = diff._d.slice();\n        }\n    \n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT),\n               new BigInteger(part._d, this._s, CONSTRUCT)];\n    };\n    \n    // Throws an exception if n is outside of (-BigInteger.base, -1] or\n    // [1, BigInteger.base).  It's not necessary to call this, since the\n    // other division functions will call it if they are able to.\n    BigInteger.prototype.divRemSmall = function(n) {\n        var r;\n        n = +n;\n        if (n === 0) {\n            throw new Error(\"Divide by zero\");\n        }\n    \n        var n_s = n < 0 ? -1 : 1;\n        var sign = this._s * n_s;\n        n = Math.abs(n);\n    \n        if (n < 1 || n >= BigInteger_base) {\n            throw new Error(\"Argument out of range\");\n        }\n    \n        if (this._s === 0) {\n            return [ZERO, ZERO];\n        }\n    \n        if (n === 1 || n === -1) {\n            return [(sign === 1) ? this.abs() : new BigInteger(this._d, sign, CONSTRUCT), ZERO];\n        }\n    \n        // 2 <= n < BigInteger_base\n    \n        // divide a single digit by a single digit\n        if (this._d.length === 1) {\n            var q = new BigInteger([(this._d[0] / n) | 0], 1, CONSTRUCT);\n            r = new BigInteger([(this._d[0] % n) | 0], 1, CONSTRUCT);\n            if (sign < 0) {\n                q = q.negate();\n            }\n            if (this._s < 0) {\n                r = r.negate();\n            }\n            return [q, r];\n        }\n    \n        var digits = this._d.slice();\n        var quot = new Array(digits.length);\n        var part = 0;\n        var diff = 0;\n        var i = 0;\n        var guess;\n    \n        while (digits.length) {\n            part = part * BigInteger_base + digits[digits.length - 1];\n            if (part < n) {\n                quot[i++] = 0;\n                digits.pop();\n                diff = BigInteger_base * diff + part;\n                continue;\n            }\n            if (part === 0) {\n                guess = 0;\n            }\n            else {\n                guess = (part / n) | 0;\n            }\n    \n            var check = n * guess;\n            diff = part - check;\n            quot[i++] = guess;\n            if (!guess) {\n                digits.pop();\n                continue;\n            }\n    \n            digits.pop();\n            part = diff;\n        }\n    \n        r = new BigInteger([diff], 1, CONSTRUCT);\n        if (this._s < 0) {\n            r = r.negate();\n        }\n        return [new BigInteger(quot.reverse(), sign, CONSTRUCT), r];\n    };\n    \n    /*\n        Function: isEven\n        Return true iff *this* is divisible by two.\n        Note that <BigInteger.ZERO> is even.\n        Returns:\n            true if *this* is even, false otherwise.\n        See Also:\n            <isOdd>\n    */\n    BigInteger.prototype.isEven = function() {\n        var digits = this._d;\n        return this._s === 0 || digits.length === 0 || (digits[0] % 2) === 0;\n    };\n    \n    /*\n        Function: isOdd\n        Return true iff *this* is not divisible by two.\n        Returns:\n            true if *this* is odd, false otherwise.\n        See Also:\n            <isEven>\n    */\n    BigInteger.prototype.isOdd = function() {\n        return !this.isEven();\n    };\n    \n    /*\n        Function: sign\n        Get the sign of a <BigInteger>.\n        Returns:\n            * -1 if *this* < 0\n            * 0 if *this* == 0\n            * +1 if *this* > 0\n        See Also:\n            <isZero>, <isPositive>, <isNegative>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.sign = function() {\n        return this._s;\n    };\n    \n    /*\n        Function: isPositive\n        Return true iff *this* > 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == 1.\n        See Also:\n            <sign>, <isZero>, <isNegative>, <isUnit>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isPositive = function() {\n        return this._s > 0;\n    };\n    \n    /*\n        Function: isNegative\n        Return true iff *this* < 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == -1.\n        See Also:\n            <sign>, <isPositive>, <isZero>, <isUnit>, <compare>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isNegative = function() {\n        return this._s < 0;\n    };\n    \n    /*\n        Function: isZero\n        Return true iff *this* == 0.\n        Returns:\n            true if *this*.compare(<BigInteger.ZERO>) == 0.\n        See Also:\n            <sign>, <isPositive>, <isNegative>, <isUnit>, <BigInteger.ZERO>\n    */\n    BigInteger.prototype.isZero = function() {\n        return this._s === 0;\n    };\n    \n    /*\n        Function: exp10\n        Multiply a <BigInteger> by a power of 10.\n        This is equivalent to, but faster than\n        > if (n >= 0) {\n        >     return this.multiply(BigInteger(\"1e\" + n));\n        > }\n        > else { // n <= 0\n        >     return this.quotient(BigInteger(\"1e\" + -n));\n        > }\n        Parameters:\n            n - The power of 10 to multiply *this* by. *n* is converted to a\n            javascipt number and must be no greater than <BigInteger.MAX_EXP>\n            (0x7FFFFFFF), or an exception will be thrown.\n        Returns:\n            *this* * (10 ** *n*), truncated to an integer if necessary.\n        See Also:\n            <pow>, <multiply>\n    */\n    BigInteger.prototype.exp10 = function(n) {\n        n = +n;\n        if (n === 0) {\n            return this;\n        }\n        if (Math.abs(n) > Number(MAX_EXP)) {\n            throw new Error(\"exponent too large in BigInteger.exp10\");\n        }\n        // Optimization for this == 0. This also keeps us from having to trim zeros in the positive n case\n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (n > 0) {\n            var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n    \n            for (; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                k._d.unshift(0);\n            }\n            if (n == 0)\n                return k;\n            k._s = 1;\n            k = k.multiplySingleDigit(Math.pow(10, n));\n            return (this._s < 0 ? k.negate() : k);\n        } else if (-n >= this._d.length*BigInteger_base_log10) {\n            return ZERO;\n        } else {\n            var k = new BigInteger(this._d.slice(), this._s, CONSTRUCT);\n    \n            for (n = -n; n >= BigInteger_base_log10; n -= BigInteger_base_log10) {\n                k._d.shift();\n            }\n            return (n == 0) ? k : k.divRemSmall(Math.pow(10, n))[0];\n        }\n    };\n    \n    /*\n        Function: pow\n        Raise a <BigInteger> to a power.\n        In this implementation, 0**0 is 1.\n        Parameters:\n            n - The exponent to raise *this* by. *n* must be no greater than\n            <BigInteger.MAX_EXP> (0x7FFFFFFF), or an exception will be thrown.\n        Returns:\n            *this* raised to the *nth* power.\n        See Also:\n            <modPow>\n    */\n    BigInteger.prototype.pow = function(n) {\n        if (this.isUnit()) {\n            if (this._s > 0) {\n                return this;\n            }\n            else {\n                return BigInteger(n).isOdd() ? this : this.negate();\n            }\n        }\n    \n        n = BigInteger(n);\n        if (n._s === 0) {\n            return ONE;\n        }\n        else if (n._s < 0) {\n            if (this._s === 0) {\n                throw new Error(\"Divide by zero\");\n            }\n            else {\n                return ZERO;\n            }\n        }\n        if (this._s === 0) {\n            return ZERO;\n        }\n        if (n.isUnit()) {\n            return this;\n        }\n    \n        if (n.compareAbs(MAX_EXP) > 0) {\n            throw new Error(\"exponent too large in BigInteger.pow\");\n        }\n        var x = this;\n        var aux = ONE;\n        var two = BigInteger.small[2];\n    \n        while (n.isPositive()) {\n            if (n.isOdd()) {\n                aux = aux.multiply(x);\n                if (n.isUnit()) {\n                    return aux;\n                }\n            }\n            x = x.square();\n            n = n.quotient(two);\n        }\n    \n        return aux;\n    };\n    \n    /*\n        Function: modPow\n        Raise a <BigInteger> to a power (mod m).\n        Because it is reduced by a modulus, <modPow> is not limited by\n        <BigInteger.MAX_EXP> like <pow>.\n        Parameters:\n            exponent - The exponent to raise *this* by. Must be positive.\n            modulus - The modulus.\n        Returns:\n            *this* ^ *exponent* (mod *modulus*).\n        See Also:\n            <pow>, <mod>\n    */\n    BigInteger.prototype.modPow = function(exponent, modulus) {\n        var result = ONE;\n        var base = this;\n    \n        while (exponent.isPositive()) {\n            if (exponent.isOdd()) {\n                result = result.multiply(base).remainder(modulus);\n            }\n    \n            exponent = exponent.quotient(BigInteger.small[2]);\n            if (exponent.isPositive()) {\n                base = base.square().remainder(modulus);\n            }\n        }\n    \n        return result;\n    };\n    \n    /*\n        Function: log\n        Get the natural logarithm of a <BigInteger> as a native JavaScript number.\n        This is equivalent to\n        > Math.log(this.toJSValue())\n        but handles values outside of the native number range.\n        Returns:\n            log( *this* )\n        See Also:\n            <toJSValue>\n    */\n    BigInteger.prototype.log = function() {\n        switch (this._s) {\n        case 0:\t return -Infinity;\n        case -1: return NaN;\n        default: // Fall through.\n        }\n    \n        var l = this._d.length;\n    \n        if (l*BigInteger_base_log10 < 30) {\n            return Math.log(this.valueOf());\n        }\n    \n        var N = Math.ceil(30/BigInteger_base_log10);\n        var firstNdigits = this._d.slice(l - N);\n        return Math.log((new BigInteger(firstNdigits, 1, CONSTRUCT)).valueOf()) + (l - N) * Math.log(BigInteger_base);\n    };\n    \n    /*\n        Function: valueOf\n        Convert a <BigInteger> to a native JavaScript integer.\n        This is called automatically by JavaScipt to convert a <BigInteger> to a\n        native value.\n        Returns:\n            > parseInt(this.toString(), 10)\n        See Also:\n            <toString>, <toJSValue>\n    */\n    BigInteger.prototype.valueOf = function() {\n        return parseInt(this.toString(), 10);\n    };\n    \n    /*\n        Function: toJSValue\n        Convert a <BigInteger> to a native JavaScript integer.\n        This is the same as valueOf, but more explicitly named.\n        Returns:\n            > parseInt(this.toString(), 10)\n        See Also:\n            <toString>, <valueOf>\n    */\n    BigInteger.prototype.toJSValue = function() {\n        return parseInt(this.toString(), 10);\n    };\n    \n    \n    /*\n     Function: lowVal\n     Author: Lucas Jones\n     */\n    BigInteger.prototype.lowVal = function () {\n        return this._d[0] || 0;\n    };\n    \n    var MAX_EXP = BigInteger(0x7FFFFFFF);\n    // Constant: MAX_EXP\n    // The largest exponent allowed in <pow> and <exp10> (0x7FFFFFFF or 2147483647).\n    BigInteger.MAX_EXP = MAX_EXP;\n    \n    (function() {\n        function makeUnary(fn) {\n            return function(a) {\n                return fn.call(BigInteger(a));\n            };\n        }\n    \n        function makeBinary(fn) {\n            return function(a, b) {\n                return fn.call(BigInteger(a), BigInteger(b));\n            };\n        }\n    \n        function makeTrinary(fn) {\n            return function(a, b, c) {\n                return fn.call(BigInteger(a), BigInteger(b), BigInteger(c));\n            };\n        }\n    \n        (function() {\n            var i, fn;\n            var unary = \"toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log\".split(\",\");\n            var binary = \"compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs\".split(\",\");\n            var trinary = [\"modPow\"];\n    \n            for (i = 0; i < unary.length; i++) {\n                fn = unary[i];\n                BigInteger[fn] = makeUnary(BigInteger.prototype[fn]);\n            }\n    \n            for (i = 0; i < binary.length; i++) {\n                fn = binary[i];\n                BigInteger[fn] = makeBinary(BigInteger.prototype[fn]);\n            }\n    \n            for (i = 0; i < trinary.length; i++) {\n                fn = trinary[i];\n                BigInteger[fn] = makeTrinary(BigInteger.prototype[fn]);\n            }\n    \n            BigInteger.exp10 = function(x, n) {\n                return BigInteger(x).exp10(n);\n            };\n        })();\n    })();\n    \n    exports.JSBigInt = BigInteger; // exports.BigInteger changed to exports.JSBigInt\n    })(typeof exports !== 'undefined' ? exports : this);", "var JSBigInt = require('./biginteger')['JSBigInt'];\n\n/**\nCopyright (c) 2017, moneroexamples\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nParts of the project are originally copyright (c) 2014-2017, MyMonero.com\n*/\n\nvar cnBase58 = (function () {\n    var b58 = {};\n\n    var alphabet_str = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n    var alphabet = [];\n    for (var i = 0; i < alphabet_str.length; i++) {\n        alphabet.push(alphabet_str.charCodeAt(i));\n    }\n    var encoded_block_sizes = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\n    var alphabet_size = alphabet.length;\n    var full_block_size = 8;\n    var full_encoded_block_size = 11;\n\n    var UINT64_MAX = new JSBigInt(2).pow(64);\n\n    function hextobin(hex) {\n        if (hex.length % 2 !== 0) throw \"Hex string has invalid length!\";\n        var res = new Uint8Array(hex.length / 2);\n        for (var i = 0; i < hex.length / 2; ++i) {\n            res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16);\n        }\n        return res;\n    }\n\n    function bintohex(bin) {\n        var out = [];\n        for (var i = 0; i < bin.length; ++i) {\n            out.push((\"0\" + bin[i].toString(16)).slice(-2));\n        }\n        return out.join(\"\");\n    }\n\n    function strtobin(str) {\n        var res = new Uint8Array(str.length);\n        for (var i = 0; i < str.length; i++) {\n            res[i] = str.charCodeAt(i);\n        }\n        return res;\n    }\n\n    function bintostr(bin) {\n        var out = [];\n        for (var i = 0; i < bin.length; i++) {\n            out.push(String.fromCharCode(bin[i]));\n        }\n        return out.join(\"\");\n    }\n\n    function uint8_be_to_64(data) {\n        if (data.length < 1 || data.length > 8) {\n            throw \"Invalid input length\";\n        }\n        var res = JSBigInt.ZERO;\n        var twopow8 = new JSBigInt(2).pow(8);\n        var i = 0;\n        switch (9 - data.length) {\n        case 1:\n            res = res.add(data[i++]);\n        case 2:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 3:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 4:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 5:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 6:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 7:\n            res = res.multiply(twopow8).add(data[i++]);\n        case 8:\n            res = res.multiply(twopow8).add(data[i++]);\n            break;\n        default:\n            throw \"Impossible condition\";\n        }\n        return res;\n    }\n\n    function uint64_to_8be(num, size) {\n        var res = new Uint8Array(size);\n        if (size < 1 || size > 8) {\n            throw \"Invalid input length\";\n        }\n        var twopow8 = new JSBigInt(2).pow(8);\n        for (var i = size - 1; i >= 0; i--) {\n            res[i] = num.remainder(twopow8).toJSValue();\n            num = num.divide(twopow8);\n        }\n        return res;\n    }\n\n    b58.encode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n            throw \"Invalid block length: \" + data.length;\n        }\n        var num = uint8_be_to_64(data);\n        var i = encoded_block_sizes[data.length] - 1;\n        // while num > 0\n        while (num.compare(0) === 1) {\n            var div = num.divRem(alphabet_size);\n            // remainder = num % alphabet_size\n            var remainder = div[1];\n            // num = num / alphabet_size\n            num = div[0];\n            buf[index + i] = alphabet[remainder.toJSValue()];\n            i--;\n        }\n        return buf;\n    };\n\n    b58.encode = function (hex) {\n        var data = hextobin(hex);\n        if (data.length === 0) {\n            return \"\";\n        }\n        var full_block_count = Math.floor(data.length / full_block_size);\n        var last_block_size = data.length % full_block_size;\n        var res_size = full_block_count * full_encoded_block_size + encoded_block_sizes[last_block_size];\n\n        var res = new Uint8Array(res_size);\n        var i;\n        for (i = 0; i < res_size; ++i) {\n            res[i] = alphabet[0];\n        }\n        for (i = 0; i < full_block_count; i++) {\n            res = b58.encode_block(data.subarray(i * full_block_size, i * full_block_size + full_block_size), res, i * full_encoded_block_size);\n        }\n        if (last_block_size > 0) {\n            res = b58.encode_block(data.subarray(full_block_count * full_block_size, full_block_count * full_block_size + last_block_size), res, full_block_count * full_encoded_block_size)\n        }\n        return bintostr(res);\n    };\n\n    b58.decode_block = function (data, buf, index) {\n        if (data.length < 1 || data.length > full_encoded_block_size) {\n            throw \"Invalid block length: \" + data.length;\n        }\n\n        var res_size = encoded_block_sizes.indexOf(data.length);\n        if (res_size <= 0) {\n            throw \"Invalid block size\";\n        }\n        var res_num = new JSBigInt(0);\n        var order = new JSBigInt(1);\n        for (var i = data.length - 1; i >= 0; i--) {\n            var digit = alphabet.indexOf(data[i]);\n            if (digit < 0) {\n                throw \"Invalid symbol\";\n            }\n            var product = order.multiply(digit).add(res_num);\n            // if product > UINT64_MAX\n            if (product.compare(UINT64_MAX) === 1) {\n                throw \"Overflow\";\n            }\n            res_num = product;\n            order = order.multiply(alphabet_size);\n        }\n        if (res_size < full_block_size && (new JSBigInt(2).pow(8 * res_size).compare(res_num) <= 0)) {\n            throw \"Overflow 2\";\n        }\n        buf.set(uint64_to_8be(res_num, res_size), index);\n        return buf;\n    };\n\n    b58.decode = function (enc) {\n        enc = strtobin(enc);\n        if (enc.length === 0) {\n            return \"\";\n        }\n        var full_block_count = Math.floor(enc.length / full_encoded_block_size);\n        var last_block_size = enc.length % full_encoded_block_size;\n        var last_block_decoded_size = encoded_block_sizes.indexOf(last_block_size);\n        if (last_block_decoded_size < 0) {\n            throw \"Invalid encoded length\";\n        }\n        var data_size = full_block_count * full_block_size + last_block_decoded_size;\n        var data = new Uint8Array(data_size);\n        for (var i = 0; i < full_block_count; i++) {\n            data = b58.decode_block(enc.subarray(i * full_encoded_block_size, i * full_encoded_block_size + full_encoded_block_size), data, i * full_block_size);\n        }\n        if (last_block_size > 0) {\n            data = b58.decode_block(enc.subarray(full_block_count * full_encoded_block_size, full_block_count * full_encoded_block_size + last_block_size), data, full_block_count * full_block_size);\n        }\n        return bintohex(data);\n    };\n\n    return b58;\n})();\nmodule.exports = cnBase58;", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import {Buffer} from 'buffer'\nimport { sha256 } from '@noble/hashes/sha256'\nimport { sha512, sha512_256 } from '@noble/hashes/sha512'\nimport { bytesToHex } from '@noble/hashes/utils'\n\nimport base32 from './base32'\nimport base58 from './base58'\n\nimport Blake256 from './blake256'\nimport { keccak256 } from './sha3'\nimport Blake2B from './blake2b'\n\nfunction numberToHex(number: number, length: number) {\n    let hex = number.toString(16);\n    if (hex.length % 2 === 1) {\n        hex = '0' + hex;\n    }\n    return hex.padStart(length, '0');\n}\n\nfunction isHexChar(c: string) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n    return 0;\n}\n\n/* Convert a hex char to value */\nfunction hexChar2byte(c: string) {\n    var d = 0;\n    if (c >= 'A' && c <= 'F') {\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    }\n    else if (c >= 'a' && c <= 'f') {\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    }\n    else if (c >= '0' && c <= '9') {\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n    }\n    return d;\n}\n\n/* Convert a byte to string */\nfunction byte2hexStr(byte: number) {\n    var hexByteMap = \"0123456789ABCDEF\";\n    var str = \"\";\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n    return str;\n}\n\nfunction byteArray2hexStr(byteArray: number[]) {\n    let str = \"\";\n    for (var i = 0; i < (byteArray.length - 1); i++) {\n        str += byte2hexStr(byteArray[i]);\n    }\n    str += byte2hexStr(byteArray[i]);\n    return str;\n}\n\nfunction hexStr2byteArray(str: string) {\n    const byteArray = new Uint8Array(str.length/2);\n    let d = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\n     for (i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n    return byteArray;\n}\n\nexport default {\n    numberToHex: numberToHex,\n    toHex: function (arrayOfBytes: any) {\n        let hex = '';\n        for (let i = 0; i < arrayOfBytes.length; i++) {\n            // @ts-expect-error\n            hex += numberToHex(arrayOfBytes[i]);\n        }\n        return hex;\n    },\n    sha256: function (payload: any, format = 'HEX') {\n        // const sha = new JsSHA('SHA-256', format);\n        // sha.update(payload);\n        // return sha.getHash(format);\n        return bytesToHex(sha256(hexStr2byteArray(payload) as any))\n    },\n    sha256x2: function (buffer: any, format = 'HEX') {\n        return this.sha256(this.sha256(buffer, format), format);\n    },\n    sha256Checksum: function (payload: any) {\n        return this.sha256(this.sha256(payload)).slice(0, 8);\n    },\n    sha512: function(payload: any, format = 'HEX') {\n        return bytesToHex(sha512(payload))\n    },\n    sha512_256: function (payload: any, format = 'HEX') {\n        return bytesToHex(sha512_256(hexStr2byteArray(payload)))\n    },\n    blake256: function (hexString: string) {\n        return new Blake256().update(hexString, 'hex').digest('hex');\n    },\n    blake256Checksum: function (payload: any) {\n        return this.blake256(this.blake256(payload)).substr(0, 8);\n    },\n    blake2b: function (hexString: string, outlen: number) {\n        return new Blake2B(outlen).update(Buffer.from(hexString, 'hex')).digest('hex');\n    },\n    keccak256: function (hexString: string) {\n        return keccak256(hexString);\n    },\n    keccak256Checksum: function (payload: any) {\n        return keccak256(payload).toString().substr(0, 8);\n    },\n    blake2b256: function (hexString: string) {\n        return new Blake2B(32).update(Buffer.from(hexString, 'hex'), 32).digest('hex');\n    },\n    base58: base58.decode,\n    byteArray2hexStr: byteArray2hexStr,\n    hexStr2byteArray: hexStr2byteArray,\n    base32: base32\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\n /**\n* Encode a string to base32\n*/\nconst b32encode = function(s: string) {\n    const parts = [];\n    let quanta = Math.floor((s.length / 5));\n    const leftover = s.length % 5;\n\n     if (leftover != 0) {\n        for (let i = 0; i < (5 - leftover); i++) {\n            s += '\\x00';\n        }\n        quanta += 1;\n    }\n\n     for (let i = 0; i < quanta; i++) {\n        parts.push(alphabet.charAt(s.charCodeAt(i * 5) >> 3));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5) & 0x07) << 2) | (s.charCodeAt(i * 5 + 1) >> 6)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 1) & 0x3F) >> 1)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 1) & 0x01) << 4) | (s.charCodeAt(i * 5 + 2) >> 4)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 2) & 0x0F) << 1) | (s.charCodeAt(i * 5 + 3) >> 7)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 3) & 0x7F) >> 2)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 3) & 0x03) << 3) | (s.charCodeAt(i * 5 + 4) >> 5)));\n        parts.push(alphabet.charAt(((s.charCodeAt(i * 5 + 4) & 0x1F))));\n    }\n\n    let replace = 0;\n    if (leftover == 1) replace = 6;\n    else if (leftover == 2) replace = 4;\n    else if (leftover == 3) replace = 3;\n    else if (leftover == 4) replace = 1;\n\n    for (let i = 0; i < replace; i++) parts.pop();\n    for (let i = 0; i < replace; i++) parts.push(\"=\");\n\n     return parts.join(\"\");\n}\n\n/**\n* Decode a base32 string.\n* This is made specifically for our use, deals only with proper strings\n*/\nconst b32decode = function(s: string) {\n    const r = new ArrayBuffer(s.length * 5 / 8);\n    const b = new Uint8Array(r);\n    for (let j = 0; j < s.length / 8; j++) {\n        const v = [0, 0, 0, 0, 0, 0, 0, 0];\n        for (let i = 0; i < 8; ++i) {\n            v[i] = alphabet.indexOf(s[j * 8 + i]);\n        }\n        const i = 0;\n        b[j * 5 + 0] = (v[i + 0] << 3) | (v[i + 1] >> 2);\n        b[j * 5 + 1] = ((v[i + 1] & 0x3) << 6) | (v[i + 2] << 1) | (v[i + 3] >> 4);\n        b[j * 5 + 2] = ((v[i + 3] & 0xf) << 4) | (v[i + 4] >> 1);\n        b[j * 5 + 3] = ((v[i + 4] & 0x1) << 7) | (v[i + 5] << 2) | (v[i + 6] >> 3);\n        b[j * 5 + 4] = ((v[i + 6] & 0x7) << 5) | (v[i + 7]);\n    }\n    return b;\n}\n\nexport default {\n    b32decode,\n    b32encode\n};\n", "// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\nfor (let i = 0; i < ALPHABET.length; ++i) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n}\nconst BASE = ALPHABET.length;\n\nexport default {\n    decode: function(string: string) {\n        if (string.length === 0) return [];\n\n        var i, j, bytes = [0];\n        for (i = 0; i < string.length; ++i) {\n            var c = string[i];\n            if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n\n            for (j = 0; j < bytes.length; ++j) bytes[j] *= BASE\n            bytes[0] += ALPHABET_MAP[c];\n\n            var carry = 0;\n            for (j = 0; j < bytes.length; ++j) {\n                bytes[j] += carry;\n                carry = bytes[j] >> 8;\n                bytes[j] &= 0xff\n            }\n\n            while (carry) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (i = 0; string[i] === '1' && i < string.length - 1; ++i){\n            bytes.push(0);\n        }\n\n        return bytes.reverse();\n    }\n};\n", "import {Address} from './types'\n\nexport function getAddress(address: Address): string {\n    return typeof address === 'string'\n        ? address\n        : address.address\n}\n", "import cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nconst ALGORAND_CHECKSUM_BYTE_LENGTH = 4;\nconst ALGORAND_ADDRESS_LENGTH = 58;\n\nfunction verifyChecksum(address: string) {\n    if (address.length !== ALGORAND_ADDRESS_LENGTH) {\n        return false\n    } else {\n        // Decode base32 Address\n        const decoded = cryptoUtils.base32.b32decode(address);\n        const addr = decoded.slice(0, decoded.length - ALGORAND_CHECKSUM_BYTE_LENGTH)\n        const checksum = cryptoUtils.byteArray2hexStr(decoded.slice(-4) as any)\n\n        // Hash Address - Checksum\n        const code = cryptoUtils.sha512_256(cryptoUtils.byteArray2hexStr(addr as any)).substr(-ALGORAND_CHECKSUM_BYTE_LENGTH * 2);\n\n        return code.toUpperCase() === checksum\n    }\n}\n\nexport default {\n    isValidAddress: function (address: Address) {\n        return verifyChecksum(getAddress(address))\n    }\n}\n", "import cryptoUtils from '../crypto/utils'\nimport bech32 from '../crypto/bech32'\nimport {Address, NetworkType} from '../types'\nimport BTCValidator from './bitcoin_validator'\nimport {getAddress} from '../helpers'\n\nfunction validateAddress(address: string, networkType: NetworkType, opts: BCHValidatorOpts) {\n    const regexp = new RegExp(opts.regexp);\n    let raw_address: string;\n\n    const res = address.split(':');\n    if (res.length === 1) {\n        raw_address = address\n    } else {\n        if (res[0] !== 'bitcoincash') {\n            return false;\n        }\n        raw_address = res[1];\n    }\n\n    if (!regexp.test(raw_address)) {\n        return false;\n    }\n\n    if (raw_address.toLowerCase() != raw_address && raw_address.toUpperCase() != raw_address) {\n        return false;\n    }\n\n    const decoded = cryptoUtils.base32.b32decode(raw_address);\n\n    const prefix = networkType === NetworkType.MainNet\n        ? 'bitcoincash'\n        : 'bchtest'\n\n    try {\n        if (bech32.verifyChecksum(prefix, decoded, bech32.encodings.BECH32)) {\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\ninterface BCHValidatorOpts {\n    addressTypes?: {\n        mainnet: [string, string],\n        testnet: [string, string, string, string],\n    },\n    expectedLength?: number\n    bech32Hrp?: {\n        mainnet: [string],\n        testnet: [string],\n    },\n    hashFunction?: 'blake256' | 'blake256keccak256' | 'keccak256' | 'sha256',\n    regexp?: RegExp,\n}\n\nconst DefaultBCHValidatorOpts: BCHValidatorOpts = {\n    addressTypes: {mainnet: ['00', '05'], testnet: ['6f', 'c4', '3c', '26']},\n    bech32Hrp: {mainnet: ['bc'], testnet: ['tb']},\n    regexp: /^[qQpP][0-9a-zA-Z]{41}$/,\n}\n\nexport default (networkType = NetworkType.MainNet, opts?: BCHValidatorOpts) => ({\n    isValidAddress: function (address: Address) {\n        const addr = getAddress(address)\n        const _opts = {...DefaultBCHValidatorOpts, ...opts}\n        return validateAddress(addr, networkType, _opts) || BTCValidator(networkType, _opts).isValidAddress(address);\n    }\n})\n", "import base58 from '../crypto/base58'\nimport segwit from '../crypto/segwit_addr'\nimport cryptoUtils from '../crypto/utils'\n\nimport {Address, NetworkType} from '../types'\nimport {getAddress} from '../helpers'\nimport {Buffer} from 'buffer'\n\nfunction getDecoded(address: string) {\n    try {\n        return base58.decode(address);\n    } catch (e) {\n        // if decoding fails, assume invalid address\n        return null;\n    }\n}\n\nfunction getChecksum(hashFunction: BTCValidatorOpts['hashFunction'], payload: any) {\n    // Each currency may implement different hashing algorithm\n    switch (hashFunction) {\n        // blake then keccak hash chain\n        case 'blake256keccak256':\n            var blake = cryptoUtils.blake2b256(payload);\n            return cryptoUtils.keccak256Checksum(Buffer.from(blake, 'hex'));\n        case 'blake256':\n            return cryptoUtils.blake256Checksum(payload);\n        case 'keccak256':\n            return cryptoUtils.keccak256Checksum(payload);\n        case 'sha256':\n        default:\n            return cryptoUtils.sha256Checksum(payload);\n    }\n}\n\nfunction getAddressType(address: string, opts: BTCValidatorOpts) {\n    // should be 25 bytes per btc address spec and 26 decred\n    const expectedLength = opts.expectedLength || 25;\n    const hashFunction = opts.hashFunction || 'sha256';\n    const decoded = getDecoded(address);\n\n    if (decoded) {\n        const length = decoded.length;\n\n        if (length !== expectedLength) {\n            return null;\n        }\n\n        if (opts.regex) {\n            if (!opts.regex.test(address)) {\n                return false;\n            }\n        }\n\n        const checksum = cryptoUtils.toHex(decoded.slice(length - 4, length)),\n            body = cryptoUtils.toHex(decoded.slice(0, length - 4)),\n            goodChecksum = getChecksum(hashFunction, body);\n\n        return checksum === goodChecksum ? cryptoUtils.toHex(decoded.slice(0, expectedLength - 24)) : null;\n    }\n\n    return null;\n}\n\nfunction isValidP2PKHandP2SHAddress(address: string, opts: BTCValidatorOpts, networkType = NetworkType.MainNet) {\n    let correctAddressTypes: string[];\n    const addressType = getAddressType(address, opts);\n\n    if (addressType) {\n        if (networkType === NetworkType.MainNet || networkType === NetworkType.TestNet) {\n            correctAddressTypes = opts.addressTypes[networkType]\n        } else if (opts.addressTypes) {\n            correctAddressTypes = opts.addressTypes.mainnet.concat(opts.addressTypes.testnet);\n        } else {\n            return false;\n        }\n\n        return correctAddressTypes.indexOf(addressType) >= 0;\n    }\n\n    return false;\n}\n\n\ninterface BTCValidatorOpts {\n    addressTypes?: {\n        mainnet: string[],\n        testnet: string[],\n    },\n    expectedLength?: number\n    bech32Hrp?: {\n        mainnet: [string],\n        testnet: [string],\n    },\n    hashFunction?: 'blake256' | 'blake256keccak256' | 'keccak256' | 'sha256',\n    regex?: RegExp,\n}\n\nconst DefaultBTCValidatorOpts: BTCValidatorOpts = {\n    addressTypes: {mainnet: ['00', '05'], testnet: ['6f', 'c4', '3c', '26']},\n    bech32Hrp: {mainnet: ['bc'], testnet: ['tb']},\n}\n\nexport default (networkType = NetworkType.MainNet, opts?: Partial<BTCValidatorOpts>) => ({\n    isValidAddress(address: Address): boolean {\n        const addr = getAddress(address)\n        const _opts = {...DefaultBTCValidatorOpts, ...opts}\n        return isValidP2PKHandP2SHAddress(addr, _opts, networkType) || segwit.isValidAddress(addr, networkType, _opts);\n    }\n})\n", "import cbor from 'cbor-js'\nimport CRC from 'crc'\n\nimport base58 from '../crypto/base58'\nimport BIP173Validator from './bip173_validator'\nimport {Address, NetworkType} from '../types'\nimport {getAddress} from '../helpers'\n\nfunction getDecoded(address: string) {\n    try {\n        const decoded = base58.decode(address);\n        return cbor.decode(new Uint8Array(decoded).buffer);\n    } catch (e) {\n        // if decoding fails, assume invalid address\n        return null;\n    }\n}\n\nfunction isValidAddressV1(address: string) {\n    const decoded = getDecoded(address);\n\n    if (!decoded || (!Array.isArray(decoded) && decoded.length != 2)) {\n        return false;\n    }\n\n    const tagged = decoded[0];\n    const validCrc = decoded[1];\n    if (typeof (validCrc) != 'number') {\n        return false;\n    }\n\n    // get crc of the payload\n    const crc = CRC.crc32(tagged);\n\n    return crc == validCrc;\n}\n\nfunction isValidAddressShelley(address: string, networkType: NetworkType, opts: any) {\n    // shelley address are just bip 173 - bech32 addresses (https://cips.cardano.org/cips/cip4/)\n    return BIP173Validator.isValidAddress(address, networkType, opts);\n}\n\ninterface AdaValidatorOptions {\n    bech32Hrp: { mainnet: string[], testnet: string[] }\n}\n\nexport default (networkType: NetworkType, opts?: AdaValidatorOptions) => ({\n    isValidAddress(address: Address) {\n        const addr = getAddress(address)\n        return isValidAddressV1(getAddress(addr)) || isValidAddressShelley(addr, networkType, opts);\n    }\n});\n", "const crc1 = (current, previous = 0) => {\n    let crc = ~~previous;\n    let accum = 0;\n    for (let index = 0; index < current.length; index++) {\n        accum += current[index];\n    }\n    crc += accum % 256;\n    return crc % 256;\n};\nexport default crc1;\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-prototype-builtins */\nimport { Buffer } from 'buffer';\nconst createBuffer = (value, encoding) => Buffer.from(value, encoding);\nexport default createBuffer;\n", "import createBuffer from './create_buffer.js';\nexport default function defineCrc(model, calculator) {\n    const result = (value, previous) => calculator(createBuffer(value), previous) >>> 0;\n    result.signed = (value, previous) => calculator(createBuffer(value), previous);\n    result.unsigned = result;\n    result.model = model;\n    return result;\n}\n", "import crc1 from './calculators/crc1.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc1', crc1);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\nlet TABLE = [\n    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,\n    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,\n    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,\n    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,\n    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,\n    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,\n    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,\n    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,\n    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,\n    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,\n    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,\n    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,\n    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,\n    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,\n    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,\n    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8;\n", "import crc8 from './calculators/crc8.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8', crc8);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nlet TABLE = [\n    0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,\n    0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,\n    0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,\n    0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,\n    0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,\n    0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,\n    0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,\n    0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,\n    0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,\n    0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,\n    0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,\n    0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,\n    0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,\n    0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,\n    0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,\n    0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc81wire = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc81wire;\n", "import crc81wire from './calculators/crc81wire.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('dallas-1-wire', crc81wire);\n", "// Generated by `./pycrc.py --algorithm=table-driven --generate=c --width=8 --poly=0xd5 --reflect-in=false --reflect-out=false --xor-in=0xff --xor-out=0x00`\nlet TABLE = [\n    0x00, 0xd5, 0x7f, 0xaa, 0xfe, 0x2b, 0x81, 0x54, 0x29, 0xfc, 0x56, 0x83, 0xd7, 0x02, 0xa8, 0x7d,\n    0x52, 0x87, 0x2d, 0xf8, 0xac, 0x79, 0xd3, 0x06, 0x7b, 0xae, 0x04, 0xd1, 0x85, 0x50, 0xfa, 0x2f,\n    0xa4, 0x71, 0xdb, 0x0e, 0x5a, 0x8f, 0x25, 0xf0, 0x8d, 0x58, 0xf2, 0x27, 0x73, 0xa6, 0x0c, 0xd9,\n    0xf6, 0x23, 0x89, 0x5c, 0x08, 0xdd, 0x77, 0xa2, 0xdf, 0x0a, 0xa0, 0x75, 0x21, 0xf4, 0x5e, 0x8b,\n    0x9d, 0x48, 0xe2, 0x37, 0x63, 0xb6, 0x1c, 0xc9, 0xb4, 0x61, 0xcb, 0x1e, 0x4a, 0x9f, 0x35, 0xe0,\n    0xcf, 0x1a, 0xb0, 0x65, 0x31, 0xe4, 0x4e, 0x9b, 0xe6, 0x33, 0x99, 0x4c, 0x18, 0xcd, 0x67, 0xb2,\n    0x39, 0xec, 0x46, 0x93, 0xc7, 0x12, 0xb8, 0x6d, 0x10, 0xc5, 0x6f, 0xba, 0xee, 0x3b, 0x91, 0x44,\n    0x6b, 0xbe, 0x14, 0xc1, 0x95, 0x40, 0xea, 0x3f, 0x42, 0x97, 0x3d, 0xe8, 0xbc, 0x69, 0xc3, 0x16,\n    0xef, 0x3a, 0x90, 0x45, 0x11, 0xc4, 0x6e, 0xbb, 0xc6, 0x13, 0xb9, 0x6c, 0x38, 0xed, 0x47, 0x92,\n    0xbd, 0x68, 0xc2, 0x17, 0x43, 0x96, 0x3c, 0xe9, 0x94, 0x41, 0xeb, 0x3e, 0x6a, 0xbf, 0x15, 0xc0,\n    0x4b, 0x9e, 0x34, 0xe1, 0xb5, 0x60, 0xca, 0x1f, 0x62, 0xb7, 0x1d, 0xc8, 0x9c, 0x49, 0xe3, 0x36,\n    0x19, 0xcc, 0x66, 0xb3, 0xe7, 0x32, 0x98, 0x4d, 0x30, 0xe5, 0x4f, 0x9a, 0xce, 0x1b, 0xb1, 0x64,\n    0x72, 0xa7, 0x0d, 0xd8, 0x8c, 0x59, 0xf3, 0x26, 0x5b, 0x8e, 0x24, 0xf1, 0xa5, 0x70, 0xda, 0x0f,\n    0x20, 0xf5, 0x5f, 0x8a, 0xde, 0x0b, 0xa1, 0x74, 0x09, 0xdc, 0x76, 0xa3, 0xf7, 0x22, 0x88, 0x5d,\n    0xd6, 0x03, 0xa9, 0x7c, 0x28, 0xfd, 0x57, 0x82, 0xff, 0x2a, 0x80, 0x55, 0x01, 0xd4, 0x7e, 0xab,\n    0x84, 0x51, 0xfb, 0x2e, 0x7a, 0xaf, 0x05, 0xd0, 0xad, 0x78, 0xd2, 0x07, 0x53, 0x86, 0x2c, 0xf9,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8dvbs2 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8dvbs2;\n", "import crc8dvbs2 from './calculators/crc8dvbs2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8-dvbs2', crc8dvbs2);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16;\n", "import crc16 from './calculators/crc16.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16', crc16);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\nlet TABLE = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b,\n    0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738,\n    0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96,\n    0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb,\n    0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2,\n    0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827,\n    0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d,\n    0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16ccitt = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 8) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16ccitt;\n", "import crc16ccitt from './calculators/crc16ccitt.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('ccitt', crc16ccitt);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16modbus = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16modbus;\n", "import crc16modbus from './calculators/crc16modbus.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16-modbus', crc16modbus);\n", "const crc16xmodem = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n    for (let index = 0; index < current.length; index++) {\n        let code = (crc >>> 8) & 0xff;\n        code ^= current[index] & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n};\nexport default crc16xmodem;\n", "import crc16xmodem from './calculators/crc16xmodem.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('xmodem', crc16xmodem);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\nlet TABLE = [\n    0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3,\n    0xca6c, 0xdbe5, 0xe97e, 0xf8f7, 0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n    0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876, 0x2102, 0x308b, 0x0210, 0x1399,\n    0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n    0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50,\n    0xfbef, 0xea66, 0xd8fd, 0xc974, 0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n    0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3, 0x5285, 0x430c, 0x7197, 0x601e,\n    0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n    0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5,\n    0xa96a, 0xb8e3, 0x8a78, 0x9bf1, 0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n    0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70, 0x8408, 0x9581, 0xa71a, 0xb693,\n    0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n    0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a,\n    0x5ee5, 0x4f6c, 0x7df7, 0x6c7e, 0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n    0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd, 0xb58b, 0xa402, 0x9699, 0x8710,\n    0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n    0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df,\n    0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n    0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595,\n    0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n    0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c,\n    0x3de3, 0x2c6a, 0x1ef1, 0x0f78,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16kermit = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16kermit;\n", "import crc16kermit from './calculators/crc16kermit.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('kermit', crc16kermit);\n", "// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\nlet TABLE = [\n    0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17, 0xa18139,\n    0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e, 0xc54e89, 0x430272,\n    0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e, 0x64cfb0, 0xe2834b, 0xee1abd,\n    0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7, 0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f,\n    0x9f3708, 0x197bf3, 0x15e205, 0x93aefe, 0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631,\n    0xb8faca, 0xb4633c, 0x322fc7, 0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a,\n    0xd0ac8c, 0x56e077, 0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5,\n    0xf7614e, 0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5,\n    0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc, 0xdced5b,\n    0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c, 0x7d6c62, 0xfb2099,\n    0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375, 0x15723b, 0x933ec0, 0x9fa736,\n    0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c, 0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4,\n    0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15, 0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53,\n    0xc596a8, 0xc90f5e, 0x4f43a5, 0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791,\n    0x688e67, 0xeec29c, 0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448,\n    0xac38b3, 0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a,\n    0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a, 0x578814,\n    0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703, 0x3f964d, 0xb9dab6,\n    0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a, 0x9e1774, 0x185b8f, 0x14c279,\n    0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863, 0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132,\n    0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3, 0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c,\n    0x4ef3e7, 0x426a11, 0xc426ea, 0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c,\n    0x33d79a, 0xb59b61, 0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3,\n    0x141a58, 0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8,\n    0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1, 0x26359f,\n    0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88, 0x87b4a6, 0x01f85d,\n    0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1, 0xe37b16, 0x6537ed, 0x69ae1b,\n    0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401, 0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9,\n    0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc24 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 16) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffffff;\n    }\n    return crc;\n};\nexport default crc24;\n", "import crc24 from './calculators/crc24.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-24', crc24);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32 = (current, previous) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n};\nexport default crc32;\n", "import crc32 from './calculators/crc32.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32', crc32);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32-mpeg --generate=c`\nlet TABLE = [\n    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,\n    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,\n    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,\n    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,\n    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,\n    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,\n    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,\n    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,\n    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,\n    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,\n    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,\n    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,\n    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,\n    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,\n    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,\n    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,\n    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,\n    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,\n    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,\n    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,\n    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,\n    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,\n    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,\n    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,\n    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,\n    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,\n    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,\n    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,\n    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,\n    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,\n    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,\n    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32mpeg2 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffffffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[((crc >> 24) ^ current[index]) & 0xff] ^ (crc << 8);\n    }\n    return crc;\n};\nexport default crc32mpeg2;\n", "import crc32mpeg2 from './calculators/crc32mpeg2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32-mpeg', crc32mpeg2);\n", "// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crcjam = (current, previous = -1) => {\n    let crc = previous === 0 ? 0 : ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc;\n};\nexport default crcjam;\n", "import crcjam from './calculators/crcjam.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('jam', crcjam);\n", "import crc1 from './crc1.js';\nimport crc8 from './crc8.js';\nimport crc81wire from './crc81wire.js';\nimport crc8dvbs2 from './crc8dvbs2.js';\nimport crc16 from './crc16.js';\nimport crc16ccitt from './crc16ccitt.js';\nimport crc16modbus from './crc16modbus.js';\nimport crc16xmodem from './crc16xmodem.js';\nimport crc16kermit from './crc16kermit.js';\nimport crc24 from './crc24.js';\nimport crc32 from './crc32.js';\nimport crc32mpeg2 from './crc32mpeg2.js';\nimport crcjam from './crcjam.js';\nexport { crc1 };\nexport { crc8 };\nexport { crc81wire };\nexport { crc8dvbs2 };\nexport { crc16 };\nexport { crc16ccitt };\nexport { crc16modbus };\nexport { crc16xmodem };\nexport { crc16kermit };\nexport { crc24 };\nexport { crc32 };\nexport { crc32mpeg2 };\nexport { crcjam };\nexport default {\n    crc1,\n    crc8,\n    crc81wire,\n    crc8dvbs2,\n    crc16,\n    crc16ccitt,\n    crc16modbus,\n    crc16xmodem,\n    crc16kermit,\n    crc24,\n    crc32,\n    crc32mpeg2,\n    crcjam,\n};\n", "import bech32 from '../crypto/bech32'\nimport {NetworkType} from '../types'\n\n// bip 173 bech 32 addresses (https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki)\nexport default {\n    isValidAddress: function (address: string, networkType: NetworkType, opts: any = {}) {\n        const decoded = bech32.decode(address, bech32.encodings.BECH32);\n        if (!decoded) {\n            return false;\n        }\n\n        const bech32Hrp = decoded.hrp;\n        let correctBech32Hrps;\n        if (networkType === 'mainnet' || networkType === 'testnet') {\n            correctBech32Hrps = opts.bech32Hrp[networkType];\n        } else if (opts.bech32Hrp) {\n            correctBech32Hrps = opts.bech32Hrp.prod.concat(opts.bech32Hrp.testnet)\n        } else {\n            return false;\n        }\n\n        if (correctBech32Hrps.indexOf(bech32Hrp) === -1) {\n            return false;\n        }\n\n        return true;\n    }\n};\n", "import {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nfunction isValidEOSAddress(address: string) {\n    const regex = /^[a-z0-9.]+$/g // Must be numbers, lowercase letters and decimal points only\n    return address.search(regex) !== -1 && address.length === 12;\n}\n\nexport default {\n    isValidAddress: function (address: Address) {\n        return isValidEOSAddress(getAddress(address))\n    }\n}\n", "import cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nexport default {\n    isValidAddress: function (address: Address) {\n        const addr = getAddress(address)\n        if (!/^0x[0-9a-fA-F]{40}$/.test(addr)) {\n            // Check if it has the basic requirements of an address\n            return false;\n        }\n\n        if (/^0x[0-9a-f]{40}$/.test(addr) || /^0x?[0-9A-F]{40}$/.test(addr)) {\n            // If it's all small caps or all caps, return true\n            return true;\n        }\n\n        // Otherwise check each case\n        return this.verifyChecksum(addr);\n    },\n    verifyChecksum: function (address: string) {\n        // Check each case\n        address = address.replace('0x', '');\n\n        const addressHash = cryptoUtils.keccak256(address.toLowerCase());\n\n        for (let i = 0; i < 40; i++) {\n            // The nth letter should be uppercase if the nth digit of casemap is 1\n            if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) ||\n                (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n};\n", "import cryptoUtils from '../crypto/utils'\nimport {Address, NetworkType} from '../types'\nimport {getAddress} from '../helpers'\nimport cnBase58 from '../crypto/cnBase58'\n\n\nconst addressRegTest = new RegExp(\n    '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{95}$'\n)\nconst integratedAddressRegTest = new RegExp(\n    '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{106}$'\n)\n\nconst types = {\n    addressTypes: {mainnet: ['18', '42'], testnet: ['53', '63'], stagenet: ['24']},\n    iAddressTypes: {mainnet: ['19'], testnet: ['54'], stagenet: ['25']},\n}\n\nfunction validateNetwork(decoded: string, networkType: NetworkType, addressType: 'standard' | 'integrated') {\n    const addressTypes = addressType === 'integrated'\n        ? types.iAddressTypes[networkType]\n        : types.addressTypes[networkType]\n\n    const at = parseInt(decoded.substr(0, 2), 16).toString()\n\n    switch (networkType) {\n        case 'mainnet':\n            return addressTypes.indexOf(at) >= 0\n        case 'testnet':\n            return addressTypes.indexOf(at) >= 0\n        // case 'stagenet':\n        //     return network.stagenet.indexOf(at) >= 0\n        // case 'both':\n        //     return network.prod.indexOf(at) >= 0 || network.testnet.indexOf(at) >= 0 || network.stagenet.indexOf(at) >= 0\n        default:\n            return false\n    }\n}\n\nfunction hextobin(hex: string) {\n    if (hex.length % 2 !== 0) return null\n    const res = new Uint8Array(hex.length / 2)\n    for (let i = 0; i < hex.length / 2; ++i) {\n        res[i] = parseInt(hex.slice(i * 2, i * 2 + 2), 16)\n    }\n    return res\n}\n\n\nexport default (networkType: NetworkType) => ({\n    isValidAddress(address: Address) {\n        const addr = getAddress(address)\n        let addressType: 'standard' | 'integrated' = 'standard'\n        if (!addressRegTest.test(addr)) {\n            if (integratedAddressRegTest.test(addr)) {\n                addressType = 'integrated'\n            } else {\n                return false\n            }\n        }\n\n        const decodedAddrStr = cnBase58.decode(addr)\n        if (!decodedAddrStr) return false\n\n        if (!validateNetwork(decodedAddrStr, networkType, addressType)) return false\n\n        const addrChecksum = decodedAddrStr.slice(-8)\n        const hashChecksum = cryptoUtils.keccak256Checksum(hextobin(decodedAddrStr.slice(0, -8)))\n\n        return addrChecksum === hashChecksum\n    }\n})\n", "import cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nexport default {\n    isValidAddress(address: Address) {\n        const addr = getAddress(address).toString().toUpperCase().replace(/-/g, '');\n        if (!address || addr.length !== 40) {\n            return false;\n        }\n        const decoded = cryptoUtils.toHex(cryptoUtils.base32.b32decode(addr));\n        const stepThreeChecksum = cryptoUtils.keccak256Checksum(Buffer.from(decoded.slice(0, 42), 'hex'));\n\n        return stepThreeChecksum === decoded.slice(42);\n    }\n}\n", "import baseX from 'base-x'\n\nimport cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\n\nconst ALLOWED_CHARS = '13456789abcdefghijkmnopqrstuwxyz';\n\nconst codec = baseX(ALLOWED_CHARS);\n// https://github.com/nanocurrency/raiblocks/wiki/Accounts,-Keys,-Seeds,-and-Wallet-Identifiers\nconst regexp = new RegExp('^(xrb|nano)_([' + ALLOWED_CHARS + ']{60})$');\n\nexport default {\n    isValidAddress(address: Address) {\n        const addr = getAddress(address)\n        if (regexp.test(addr)) {\n            return this.verifyChecksum(addr);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address: string) {\n        const bytes = codec.decode(regexp.exec(address)[2]).slice(-37);\n        // https://github.com/nanocurrency/raiblocks/blob/master/rai/lib/numbers.cpp#L73\n        const computedChecksum = cryptoUtils.blake2b(cryptoUtils.toHex(bytes.slice(0, -5)), 5);\n        const checksum = cryptoUtils.toHex(bytes.slice(-5).reverse());\n\n        return computedChecksum === checksum\n    }\n};\n", "import cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\n// from https://github.com/paritytech/substrate/wiki/External-Address-Format-(SS58)\nconst addressFormats = [\n    {addressLength: 3, accountIndexLength: 1, checkSumLength: 1},\n    {addressLength: 4, accountIndexLength: 2, checkSumLength: 1},\n    {addressLength: 5, accountIndexLength: 2, checkSumLength: 2},\n    {addressLength: 6, accountIndexLength: 4, checkSumLength: 1},\n    {addressLength: 7, accountIndexLength: 4, checkSumLength: 2},\n    {addressLength: 8, accountIndexLength: 4, checkSumLength: 3},\n    {addressLength: 9, accountIndexLength: 4, checkSumLength: 4},\n    {addressLength: 10, accountIndexLength: 8, checkSumLength: 1},\n    {addressLength: 11, accountIndexLength: 8, checkSumLength: 2},\n    {addressLength: 12, accountIndexLength: 8, checkSumLength: 3},\n    {addressLength: 13, accountIndexLength: 8, checkSumLength: 4},\n    {addressLength: 14, accountIndexLength: 8, checkSumLength: 5},\n    {addressLength: 15, accountIndexLength: 8, checkSumLength: 6},\n    {addressLength: 16, accountIndexLength: 8, checkSumLength: 7},\n    {addressLength: 17, accountIndexLength: 8, checkSumLength: 8},\n    {addressLength: 34, accountIndexLength: 32, checkSumLength: 2},\n];\n\nfunction verifyChecksum(address: string) {\n    try {\n        const preImage = '53533538505245'\n        const decoded = cryptoUtils.base58(address);\n        const addressType = cryptoUtils.byteArray2hexStr(decoded.slice(0, 1));\n        const addressAndChecksum = decoded.slice(1)\n\n        // get the address format\n        const addressFormat = addressFormats.find(af => af.addressLength === addressAndChecksum.length);\n\n        if (!addressFormat) {\n            throw new Error('Invalid address length');\n        }\n\n        const decodedAddress = cryptoUtils.byteArray2hexStr(addressAndChecksum.slice(0, addressFormat.accountIndexLength));\n        const checksum = cryptoUtils.byteArray2hexStr(addressAndChecksum.slice(-addressFormat.checkSumLength));\n\n        const calculatedHash = cryptoUtils\n            .blake2b(preImage + addressType + decodedAddress, 64)\n            .substr(0, addressFormat.checkSumLength * 2)\n            .toUpperCase();\n\n        return calculatedHash == checksum;\n    } catch (err) {\n        return false;\n    }\n}\n\nexport default {\n    isValidAddress(address: Address) {\n        return verifyChecksum(getAddress(address))\n    },\n}\n", "import baseX from 'base-x'\n\nimport cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nconst ALLOWED_CHARS = 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz';\n\nconst codec = baseX(ALLOWED_CHARS);\nconst regexp = new RegExp('^r[' + ALLOWED_CHARS + ']{27,35}$');\n\nexport default {\n    /**\n     * ripple address validation\n     */\n    isValidAddress: function (address: Address) {\n        const addr = getAddress(address)\n        const destinationTag = (address as any).destinationTag\n\n        const validAddress = regexp.test(addr) && this.verifyChecksum(addr);\n\n        return validAddress && this.verifyMemo(destinationTag)\n    },\n\n    verifyMemo(destinationTag: string | null) {\n        return !destinationTag || /[0-9]+/.test(destinationTag)\n    },\n\n    verifyChecksum: function (address: string) {\n        const bytes = codec.decode(address);\n        const computedChecksum = cryptoUtils.sha256Checksum(cryptoUtils.toHex(bytes.slice(0, -4)));\n        const checksum = cryptoUtils.toHex(bytes.slice(-4));\n\n        return computedChecksum === checksum\n    }\n};\n", "import cryptoUtils from '../crypto/utils'\nimport isEqual from 'lodash.isequal'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nfunction hexToBytes(hex: string) {\n    const bytes = []\n    for (let c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16))\n    }\n    return bytes\n}\n\nfunction verifyChecksum(address: string) {\n    const checksumBytes = address.slice(0, 32 * 2)\n    const check = address.slice(32 * 2, 38 * 2)\n    const blakeHash = cryptoUtils.blake2b(checksumBytes, 32).slice(0, 6 * 2)\n    return !!isEqual(blakeHash, check)\n}\n\nexport default {\n    isValidAddress: function (address: Address) {\n        const addr = getAddress(address)\n        if (addr.length !== 76) {\n            // Check if it has the basic requirements of an address\n            return false\n        }\n\n        // Otherwise check each case\n        return verifyChecksum(addr)\n    },\n}\n", "import base58 from '../crypto/base58'\n\n// simple base58 validator.  Just checks if it can be decoded.\nexport default {\n    isValidAddress: function (address, opts: any) {\n        try {\n            if (!address || address.length == 0) {\n                return false;\n            }\n\n            if (opts.minLength && (address.length < opts.minLength)) {\n                return false;\n            }\n\n            if (opts.maxLength && (address.length > opts.maxLength)) {\n                return false;\n            }\n            try {\n                const decoded = base58.decode(address);\n                if (!decoded || !decoded.length) {\n                    return false;\n                }\n            } catch (e) {\n                // if decoding fails, assume invalid address\n                return false;\n            }\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n};\n", "import base58Validator from './base58_validator';\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nexport default {\n    isValidAddress: function (address: Address) {\n        return base58Validator.isValidAddress(getAddress(address), {\n            maxLength: 44,\n            minLength: 43,\n        })\n    }\n};\n", "import base58 from '../crypto/base58'\nimport cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nconst prefix = new Uint8Array([6, 161, 159]);\n\nfunction decodeRaw(buffer: any) {\n    let payload = buffer.slice(0, -4);\n    let checksum = buffer.slice(-4);\n    let newChecksum = cryptoUtils.hexStr2byteArray(\n        cryptoUtils.sha256x2(cryptoUtils.byteArray2hexStr(payload))\n    );\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3])\n        return;\n    return payload;\n}\n\nexport default {\n    isValidAddress(address: Address) {\n        try {\n            let buffer = base58.decode(getAddress(address));\n            let payload = decodeRaw(buffer);\n            if (!payload)\n                return false;\n            payload.slice(prefix.length);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n", "import {Address} from '../types'\nimport cryptoUtils from '../crypto/utils'\nimport {getAddress} from '../helpers'\n\nfunction decodeBase58Address(base58String: string) {\n    if (typeof (base58String) !== 'string') {\n        return false;\n    }\n    if (base58String.length !== 34) {\n        return false;\n    }\n\n    let address: number[]\n    try {\n        address = cryptoUtils.base58(base58String);\n    } catch (e) {\n        return false\n    }\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n    address = address.slice(0, offset);\n    const hash0 = cryptoUtils.sha256(cryptoUtils.byteArray2hexStr(address));\n    const hash1 = cryptoUtils.hexStr2byteArray(cryptoUtils.sha256(hash0));\n    const checkSum1 = hash1.slice(0, 4);\n    if (checkSum[0] === checkSum1[0] && checkSum[1] === checkSum1[1] && checkSum[2]\n        === checkSum1[2] && checkSum[3] === checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return false;\n}\n\ninterface TronValidatorOpts {\n    addressTypes: string[],\n}\n\nconst DefaultTronValidatorOpts: TronValidatorOpts = {\n    addressTypes: ['65']\n}\n\nexport default (opts?: TronValidatorOpts) => ({\n    isValidAddress: function (address: Address) {\n        const _opts = {...DefaultTronValidatorOpts, ...opts}\n        const addr = decodeBase58Address(getAddress(address));\n\n        if (!addr) {\n            return false;\n        }\n\n        if (addr.length !== 21) {\n            return false;\n        }\n\n        return _opts.addressTypes.includes(addr[0].toString());\n    }\n});\n", "import baseX from 'base-x'\nimport crc from 'crc'\n\nimport cryptoUtils from '../crypto/utils'\nimport {Address} from '../types'\nimport {getAddress} from '../helpers'\n\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\nconst base32 = baseX(ALPHABET);\nconst regexp = new RegExp('^[' + ALPHABET + ']{56}$');\nconst ed25519PublicKeyVersionByte = (6 << 3);\n\nfunction swap16(number: number) {\n    const lower = number & 0xFF;\n    const upper = (number >> 8) & 0xFF;\n    return (lower << 8) | upper;\n}\n\nexport default {\n    isValidAddress(address: Address) {\n        const addr = getAddress(address)\n        if (regexp.test(addr)) {\n            return this.verifyChecksum(addr);\n        }\n\n        return false;\n    },\n\n    verifyChecksum: function (address: string) {\n        // based on https://github.com/stellar/js-stellar-base/blob/master/src/strkey.js#L126\n        var bytes = base32.decode(address);\n        if (bytes[0] !== ed25519PublicKeyVersionByte) {\n            return false;\n        }\n\n        const computedChecksum = cryptoUtils.numberToHex(swap16(crc.crc16xmodem(bytes.slice(0, -2))), 4);\n        const checksum = cryptoUtils.toHex(bytes.slice(-2));\n\n        return computedChecksum === checksum\n    }\n};\n", "import {Chain, NetworkType, Validator} from './types'\n\nimport {\n    AlgorandValidator,\n    BCHValidator,\n    BTCValidator,\n    CardanoValidator,\n    EOSValidator,\n    ETHValidator,\n    MoneroValidator,\n    NanoValidator,\n    NemValidator,\n    PolkadotValidator,\n    RippleValidator,\n    SiaValidator,\n    SolanaValidator,\n    TezosValidator,\n    TronValidator,\n    XLMValidator,\n} from './validators/index'\n\n\ntype ChainValidators = Record<string, {\n    alternatives?: string[],\n    validator: Validator | {\n        mainnet: Validator,\n        testnet: Validator,\n    },\n    addressTypes?: {\n        prod: string[],\n        testnet: string[]\n    }\n    bech32Hrp?: {\n        prod: string[],\n        testnet: string[]\n    }\n}>\n\nconst chainValidators: ChainValidators = {\n    algorand: {validator: AlgorandValidator},\n    bitcoin: {\n        alternatives: ['btc', 'omni'],\n        validator: {\n            mainnet: BTCValidator(NetworkType.MainNet),\n            testnet: BTCValidator(NetworkType.TestNet),\n        },\n    },\n    'bitcoincash': {\n        alternatives: ['bch', 'bitcoin-cash', 'bitcoin cash'],\n        validator: {\n            mainnet: BCHValidator(NetworkType.MainNet),\n            testnet: BCHValidator(NetworkType.TestNet),\n        }\n    },\n    cardano: {\n        alternatives: ['ada'],\n        validator: {\n            mainnet: CardanoValidator(NetworkType.MainNet, {\n                bech32Hrp: {mainnet: ['addr'], testnet: ['addr']}\n            }),\n            testnet: CardanoValidator(NetworkType.TestNet, {\n                bech32Hrp: {mainnet: ['addr'], testnet: ['addr']}\n            }),\n        }\n    },\n    doge: {\n        alternatives: ['dogecoin'],\n        validator: {\n            mainnet: BTCValidator(NetworkType.MainNet, {\n                addressTypes: {mainnet: ['1e', '16'], testnet: ['71', 'c4']}\n            }),\n            testnet: BTCValidator(NetworkType.MainNet, {\n                addressTypes: {mainnet: ['1e', '16'], testnet: ['71', 'c4']}\n            })\n        }\n    },\n    eos: {validator: EOSValidator},\n    ethereum: {\n        alternatives: ['eth', 'erc20', 'flare', 'avalanche', 'avalanche-c', 'bsc', 'bnb', 'binance'],\n        validator: ETHValidator\n    },\n    litecoin: {\n        alternatives: ['ltc'],\n        validator: {\n            mainnet: BTCValidator(NetworkType.MainNet, {\n                addressTypes: {mainnet: ['30', '05', '32'], testnet: ['6f', 'c4', '3a']},\n                bech32Hrp: {mainnet: ['ltc'], testnet: ['tltc']},\n            }),\n            testnet: BTCValidator(NetworkType.TestNet, {\n                addressTypes: {mainnet: ['30', '05', '32'], testnet: ['6f', 'c4', '3a']},\n                bech32Hrp: {mainnet: ['ltc'], testnet: ['tltc']},\n            })\n        }\n    },\n    monero: {\n        validator: {\n            mainnet: MoneroValidator(NetworkType.MainNet),\n            testnet: MoneroValidator(NetworkType.TestNet),\n        }\n    },\n    nem: {validator: NemValidator},\n    nano: {validator: NanoValidator},\n    polkadot: {validator: PolkadotValidator},\n    ripple: {\n        alternatives: ['xrp'],\n        validator: RippleValidator,\n    },\n    sia: {validator: SiaValidator},\n    solana: {\n        alternatives: ['spl'],\n        validator: SolanaValidator,\n    },\n    tron: {\n        alternatives: ['trc20'],\n        validator: TronValidator(),\n    },\n    tezos: {validator: TezosValidator},\n    xlm: {\n        alternatives: ['stellar'],\n        validator: XLMValidator,\n    },\n}\n\nexport function getValidatorForChain(chain: Chain): Validator | undefined {\n    const chainName = (chain as any).chain || chain\n    const networkType = (chain as any).networkType || NetworkType.MainNet\n\n    const key = Object.keys(chainValidators).find(key =>\n        key.toUpperCase() === chainName.toUpperCase() || chainValidators[key]\n            ?.alternatives\n            ?.map(alternative => alternative.toUpperCase())\n            ?.includes(chainName.toUpperCase())\n    )\n\n    return chainValidators[key]?.validator[networkType] || chainValidators[key]?.validator\n}\n", "import {Address, Chain} from './types'\nimport {getValidatorForChain} from './chain-validators'\n\nif (!global.Buffer) {\n    global.Buffer = require('buffer').Buffer;\n}\n\nexport function validate(address: Address, chain: Chain) {\n    const validator = getValidatorForChain(chain)\n    if (validator) {\n        return validator.isValidAddress(address);\n    }\n\n    throw new Error(`Missing validator for chain: ${chain}`);\n}\n"],
  "mappings": "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",
  "names": ["require_base64_js", "__commonJSMin", "exports", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "code", "i", "len", "getLens", "b64", "validLen", "placeHoldersLen", "lens", "_byteLength", "tmp", "arr", "curByte", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "extraBytes", "parts", "maxChunkLength", "len2", "require_ieee754", "__commonJSMin", "exports", "buffer", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "i", "d", "s", "value", "c", "rt", "require_buffer", "__commonJSMin", "exports", "base64", "ieee754", "customInspectSymbol", "Buffer", "SlowBuffer", "K_MAX_LENGTH", "typedArraySupport", "arr", "proto", "createBuffer", "length", "buf", "arg", "encodingOrOffset", "allocUnsafe", "from", "value", "fromString", "fromArrayView", "isInstance", "fromArrayBuffer", "valueOf", "b", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "i", "arrayView", "copy", "byteOffset", "obj", "len", "numberIsNaN", "a", "x", "y", "list", "buffer", "pos", "mustMatch", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "start", "end", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "m", "str", "max", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "read", "foundIndex", "found", "j", "hexWrite", "offset", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "ret", "out", "hexSliceLookupTable", "bytes", "newBuf", "checkOffset", "ext", "noAssert", "mul", "defineBigIntMethod", "validateNumber", "first", "last", "boundsError", "lo", "hi", "checkInt", "min", "maxBytes", "wrtBigUInt64LE", "checkIntBI", "wrtBigUInt64BE", "limit", "sub", "checkIEEE754", "writeFloat", "littleEndian", "writeDouble", "targetStart", "code", "errors", "E", "sym", "getMessage", "Base", "name", "range", "input", "msg", "received", "addNumericalSeparator", "checkBounds", "type", "INVALID_BASE64_RE", "base64clean", "units", "leadSurrogate", "byteArray", "c", "src", "dst", "alphabet", "table", "i16", "fn", "BufferBigIntNotDefined", "require_blake256", "__commonJSMin", "exports", "module", "Blake256", "arr", "j", "data", "encoding", "block", "offset", "i", "zo", "oo", "rot", "x", "n", "g", "v", "m", "a", "b", "c", "d", "e", "sigma", "u256", "lo", "hi", "msglen", "buffer", "require_sha3", "__commonJSMin", "exports", "module", "ERROR", "WINDOW", "root", "WEB_WORKER", "NODE_JS", "ARRAY_BUFFER", "HEX_CHARS", "SHAKE_PADDING", "CSHAKE_PADDING", "KECCAK_PADDING", "PADDING", "SHIFT", "RC", "BITS", "SHAKE_BITS", "OUTPUT_TYPES", "CSHAKE_BYTEPAD", "obj", "createOutputMethod", "bits", "padding", "outputType", "message", "Keccak", "createShakeOutputMethod", "outputBits", "createCshakeOutputMethod", "n", "s", "methods", "createKmacOutputMethod", "key", "createOutputMethods", "method", "createMethod", "i", "type", "createShakeMethod", "createCshakeMethod", "w", "createKmacMethod", "Kmac", "algorithms", "methodNames", "algorithm", "j", "methodName", "newMethodName", "notString", "blocks", "byteCount", "length", "blockCount", "index", "code", "f", "x", "right", "o", "bytes", "str", "strs", "paddingBytes", "zeros", "outputBlocks", "extraBytes", "hex", "block", "buffer", "array", "offset", "h", "l", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "b10", "b11", "b12", "b13", "b14", "b15", "b16", "b17", "b18", "b19", "b20", "b21", "b22", "b23", "b24", "b25", "b26", "b27", "b28", "b29", "b30", "b31", "b32", "b33", "b34", "b35", "b36", "b37", "b38", "b39", "b40", "b41", "b42", "b43", "b44", "b45", "b46", "b47", "b48", "b49", "require_blake2b", "__commonJSMin", "exports", "module", "ADD64AA", "v", "a", "b", "o0", "o1", "ADD64AC", "b0", "b1", "B2B_GET32", "arr", "i", "B2B_G", "c", "d", "ix", "iy", "x0", "m", "x1", "y0", "y1", "xor0", "xor1", "BLAKE2B_IV32", "SIGMA8", "SIGMA82", "x", "blake2bCompress", "ctx", "last", "parameter_block", "Blake2b", "outlen", "key", "salt", "personal", "blake2bUpdate", "input", "out", "buf", "blake2bFinal", "hexSlice", "str", "toHex", "n", "require_bech32", "__commonJSMin", "exports", "module", "CHARSET", "GENERATOR", "encodings", "decode", "encode", "verifyChecksum", "getEncodingConst", "enc", "polymod", "values", "chk", "p", "top", "i", "hrpExpand", "hrp", "ret", "data", "createChecksum", "mod", "combined", "bechString", "has_lower", "has_upper", "pos", "d", "require_segwit_addr", "__commonJSMin", "exports", "module", "bech32", "convertbits", "data", "frombits", "tobits", "pad", "acc", "bits", "ret", "maxv", "value", "decode", "hrp", "addr", "bech32m", "dec", "res", "encode", "version", "program", "enc", "isValidAddress", "address", "networkType", "opts", "correctBech32Hrps", "chrp", "require_cbor", "__commonJSMin", "exports", "module", "global", "undefined", "POW_2_24", "POW_2_32", "POW_2_53", "encode", "value", "data", "dataView", "lastLength", "offset", "ensureSpace", "length", "newByteLength", "requiredLength", "oldDataView", "uint32count", "i", "write", "writeFloat64", "writeUint8", "writeUint8Array", "writeUint16", "writeUint32", "writeUint64", "low", "high", "writeTypeAndLength", "type", "encodeItem", "utf8data", "charCode", "keys", "key", "ret", "retView", "decode", "tagger", "simpleValue", "read", "readArrayBuffer", "readFloat16", "tempArrayBuffer", "tempDataView", "readUint16", "sign", "exponent", "fraction", "readFloat32", "readFloat64", "readUint8", "readUint32", "readUint64", "readBreak", "readLength", "additionalInformation", "readIndefiniteStringLength", "majorType", "initialByte", "appendUtf16data", "utf16data", "decodeItem", "elements", "fullArrayLength", "fullArray", "fullArrayOffset", "retArray", "retObject", "obj", "require_biginteger", "__commonJSMin", "exports", "CONSTRUCT", "BigInteger", "n", "s", "token", "ZERO", "BigInteger_base", "BigInteger_base_log10", "ONE", "M_ONE", "base", "str", "i", "group", "numerals", "sign", "digits", "digit", "divmod", "expandExponential", "x", "f", "c", "l", "z", "r", "prefixRE", "parts", "baseSection", "d", "small", "a", "b", "al", "bl", "sum", "size", "carry", "m", "t", "diff", "borrow", "addOne", "subtractOne", "nl", "cmp", "pl", "partial", "bi", "jlimit", "j", "length", "imult1", "product", "k", "b_digits", "b_index", "quot", "guess", "part", "xlen", "ylen", "highx", "highy", "check", "n_s", "q", "MAX_EXP", "aux", "two", "exponent", "modulus", "result", "N", "firstNdigits", "makeUnary", "fn", "makeBinary", "makeTrinary", "unary", "binary", "trinary", "require_cnBase58", "__commonJSMin", "exports", "module", "JSBigInt", "cnBase58", "b58", "alphabet_str", "alphabet", "i", "encoded_block_sizes", "alphabet_size", "full_block_size", "full_encoded_block_size", "UINT64_MAX", "hextobin", "hex", "res", "bintohex", "bin", "out", "strtobin", "str", "bintostr", "uint8_be_to_64", "data", "twopow8", "uint64_to_8be", "num", "size", "buf", "index", "div", "remainder", "full_block_count", "last_block_size", "res_size", "res_num", "order", "digit", "product", "enc", "last_block_decoded_size", "data_size", "require_src", "__commonJSMin", "exports", "module", "base", "ALPHABET", "BASE_MAP", "j", "i", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "require_lodash", "__commonJSMin", "exports", "module", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "MAX_SAFE_INTEGER", "argsTag", "arrayTag", "asyncTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "nullTag", "objectTag", "promiseTag", "proxyTag", "regexpTag", "setTag", "stringTag", "symbolTag", "undefinedTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reRegExpChar", "reIsHostCtor", "reIsUint", "typedArrayTags", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "freeProcess", "nodeUtil", "nodeIsTypedArray", "arrayFilter", "array", "predicate", "index", "length", "resIndex", "result", "value", "arrayPush", "values", "offset", "arraySome", "baseTimes", "n", "iteratee", "baseUnary", "func", "cacheHas", "cache", "key", "getValue", "object", "mapToArray", "map", "overArg", "transform", "arg", "setToArray", "set", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "hasOwnProperty", "maskSrcKey", "uid", "nativeObjectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "propertyIsEnumerable", "splice", "symToStringTag", "nativeGetSymbols", "nativeIsBuffer", "nativeKeys", "DataView", "getNative", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "Hash", "entries", "entry", "hashClear", "hashDelete", "hashGet", "data", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "size", "SetCache", "setCacheAdd", "setCacheHas", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "pairs", "arrayLikeKeys", "inherited", "isArr", "isArray", "isArg", "isArguments", "isBuff", "isBuffer", "isType", "isTypedArray", "skipIndexes", "isIndex", "eq", "baseGetAllKeys", "keysFunc", "symbolsFunc", "baseGetTag", "getRawTag", "objectToString", "baseIsArguments", "isObjectLike", "baseIsEqual", "other", "bitmask", "customizer", "stack", "baseIsEqualDeep", "equalFunc", "objIsArr", "othIsArr", "objTag", "getTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "equalByTag", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "equalObjects", "baseIsNative", "isObject", "isMasked", "pattern", "isFunction", "baseIsTypedArray", "isLength", "baseKeys", "isPrototype", "isPartial", "arrLength", "othLength", "stacked", "seen", "arrValue", "othValue", "compared", "othIndex", "tag", "convert", "objProps", "getAllKeys", "objLength", "othProps", "skipCtor", "objValue", "objCtor", "othCtor", "keys", "getSymbols", "isKeyable", "isOwn", "unmasked", "symbol", "stubArray", "Ctor", "ctorString", "type", "proto", "isArrayLike", "stubFalse", "isEqual", "import_buffer", "isBytes", "a", "bytes", "b", "lengths", "exists", "instance", "checkFinished", "output", "out", "bytes", "min", "createView", "arr", "rotr", "word", "shift", "isLE", "hexes", "_", "i", "bytesToHex", "bytes", "hex", "utf8ToBytes", "str", "toBytes", "data", "bytes", "Hash", "toStr", "wrapConstructor", "hashCons", "hashC", "msg", "toBytes", "tmp", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "Chi", "a", "b", "c", "Maj", "HashMD", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "exists", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "output", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "SHA256_K", "SHA256_IV", "SHA256_W", "SHA256", "HashMD", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "Chi", "T2", "Maj", "sha256", "wrapConstructor", "SHA256", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "Ah", "Al", "i", "h", "l", "toBig", "shrSH", "_l", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "_h", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "fromBig", "split", "toBig", "shrSH", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "add3L", "add3H", "add4L", "add4H", "add5H", "add5L", "u64_default", "SHA512_Kh", "SHA512_Kl", "u64_default", "n", "SHA512_W_H", "SHA512_W_L", "SHA512", "HashMD", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "s0l", "W2h", "W2l", "s1h", "s1l", "SUMl", "SUMh", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "T1h", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "All", "SHA512_256", "SHA512", "sha512", "wrapConstructor", "SHA512", "sha512_256", "wrapConstructor", "SHA512_256", "alphabet", "b32encode", "s", "parts", "quanta", "leftover", "replace", "b32decode", "r", "b", "j", "v", "i", "base32_default", "ALPHABET", "ALPHABET_MAP", "i", "BASE", "base58_default", "string", "j", "bytes", "c", "carry", "import_blake256", "import_sha3", "import_blake2b", "numberToHex", "number", "length", "hex", "isHexChar", "c", "hexChar2byte", "d", "byte2hexStr", "byte", "hexByteMap", "str", "byteArray2hexStr", "byteArray", "i", "hexStr2byteArray", "j", "k", "utils_default", "arrayOfBytes", "payload", "format", "bytesToHex", "sha256", "buffer", "sha512", "sha512_256", "hexString", "Blake256", "outlen", "Blake2B", "base58_default", "base32_default", "getAddress", "address", "ALGORAND_CHECKSUM_BYTE_LENGTH", "ALGORAND_ADDRESS_LENGTH", "verifyChecksum", "address", "decoded", "utils_default", "addr", "checksum", "algorand_validator_default", "getAddress", "import_bech32", "import_segwit_addr", "import_buffer", "getDecoded", "address", "base58_default", "getChecksum", "hashFunction", "payload", "blake", "utils_default", "getAddressType", "opts", "expectedLength", "decoded", "length", "checksum", "body", "goodChecksum", "isValidP2PKHandP2SHAddress", "networkType", "correctAddressTypes", "addressType", "DefaultBTCValidatorOpts", "bitcoin_validator_default", "addr", "getAddress", "_opts", "segwit", "validateAddress", "address", "networkType", "opts", "regexp", "raw_address", "res", "decoded", "utils_default", "prefix", "bech32", "DefaultBCHValidatorOpts", "bch_validator_default", "addr", "getAddress", "_opts", "bitcoin_validator_default", "import_cbor_js", "crc1", "current", "previous", "crc", "accum", "index", "crc1_default", "import_buffer", "createBuffer", "value", "encoding", "create_buffer_default", "defineCrc", "model", "calculator", "result", "value", "previous", "create_buffer_default", "crc1_default", "defineCrc", "TABLE", "crc8", "current", "previous", "crc", "index", "crc8_default", "crc8_default", "defineCrc", "TABLE", "crc81wire", "current", "previous", "crc", "index", "crc81wire_default", "crc81wire_default", "defineCrc", "TABLE", "crc8dvbs2", "current", "previous", "crc", "index", "crc8dvbs2_default", "crc8dvbs2_default", "defineCrc", "TABLE", "crc16", "current", "previous", "crc", "index", "crc16_default", "crc16_default", "defineCrc", "TABLE", "crc16ccitt", "current", "previous", "crc", "index", "crc16ccitt_default", "crc16ccitt_default", "defineCrc", "TABLE", "crc16modbus", "current", "previous", "crc", "index", "crc16modbus_default", "crc16modbus_default", "defineCrc", "crc16xmodem", "current", "previous", "crc", "index", "code", "crc16xmodem_default", "crc16xmodem_default", "defineCrc", "TABLE", "crc16kermit", "current", "previous", "crc", "index", "crc16kermit_default", "crc16kermit_default", "defineCrc", "TABLE", "crc24", "current", "previous", "crc", "index", "crc24_default", "crc24_default", "defineCrc", "TABLE", "crc32", "current", "previous", "crc", "index", "crc32_default", "crc32_default", "defineCrc", "TABLE", "crc32mpeg2", "current", "previous", "crc", "index", "crc32mpeg2_default", "crc32mpeg2_default", "defineCrc", "TABLE", "crcjam", "current", "previous", "crc", "index", "crcjam_default", "crcjam_default", "defineCrc", "mjs_default", "crc1_default", "crc8_default", "crc81wire_default", "crc8dvbs2_default", "crc16_default", "crc16ccitt_default", "crc16modbus_default", "crc16xmodem_default", "crc16kermit_default", "crc24_default", "crc32_default", "crc32mpeg2_default", "crcjam_default", "import_bech32", "bip173_validator_default", "address", "networkType", "opts", "decoded", "bech32", "bech32Hrp", "correctBech32Hrps", "getDecoded", "address", "decoded", "base58_default", "cbor", "isValidAddressV1", "tagged", "validCrc", "mjs_default", "isValidAddressShelley", "networkType", "opts", "bip173_validator_default", "cardano_validator_default", "addr", "getAddress", "isValidEOSAddress", "address", "regex", "eos_validator_default", "getAddress", "ethereum_validator_default", "address", "addr", "getAddress", "addressHash", "utils_default", "i", "import_cnBase58", "addressRegTest", "integratedAddressRegTest", "types", "validateNetwork", "decoded", "networkType", "addressType", "addressTypes", "at", "hextobin", "hex", "res", "i", "monero_validator_default", "address", "addr", "getAddress", "decodedAddrStr", "cnBase58", "addrChecksum", "hashChecksum", "utils_default", "nem_validator_default", "address", "addr", "getAddress", "decoded", "utils_default", "import_base_x", "ALLOWED_CHARS", "codec", "baseX", "regexp", "nano_validator_default", "address", "addr", "getAddress", "bytes", "computedChecksum", "utils_default", "checksum", "addressFormats", "verifyChecksum", "address", "preImage", "decoded", "utils_default", "addressType", "addressAndChecksum", "addressFormat", "af", "decodedAddress", "checksum", "polkadot_validator_default", "getAddress", "import_base_x", "ALLOWED_CHARS", "codec", "baseX", "regexp", "ripple_validator_default", "address", "addr", "getAddress", "destinationTag", "bytes", "computedChecksum", "utils_default", "checksum", "import_lodash", "verifyChecksum", "address", "checksumBytes", "check", "blakeHash", "utils_default", "isEqual", "sia_validator_default", "addr", "getAddress", "base58_validator_default", "address", "opts", "decoded", "base58_default", "solana_validator_default", "address", "base58_validator_default", "getAddress", "prefix", "decodeRaw", "buffer", "payload", "checksum", "newChecksum", "utils_default", "tezos_validator_default", "address", "base58_default", "getAddress", "decodeBase58Address", "base58String", "address", "utils_default", "offset", "checkSum", "hash0", "checkSum1", "DefaultTronValidatorOpts", "tron_validator_default", "opts", "_opts", "addr", "getAddress", "import_base_x", "ALPHABET", "base32", "baseX", "regexp", "ed25519PublicKeyVersionByte", "swap16", "number", "lower", "upper", "xlm_validator_default", "address", "addr", "getAddress", "bytes", "computedChecksum", "utils_default", "mjs_default", "checksum", "chainValidators", "algorand_validator_default", "bitcoin_validator_default", "bch_validator_default", "cardano_validator_default", "eos_validator_default", "ethereum_validator_default", "monero_validator_default", "nem_validator_default", "nano_validator_default", "polkadot_validator_default", "ripple_validator_default", "sia_validator_default", "solana_validator_default", "tron_validator_default", "tezos_validator_default", "xlm_validator_default", "getValidatorForChain", "chain", "chainName", "networkType", "key", "alternative", "validate", "address", "chain", "validator", "getValidatorForChain"]
}
